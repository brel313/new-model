{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":97,"index":97}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":98},"end":{"line":2,"column":40,"index":138}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"]}},{"name":"./ExpoMediaLibrary","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":139},"end":{"line":3,"column":46,"index":185}}],"key":"yXHDHFsvtz5fKc5CK5Xe3zolTC8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.MediaType = void 0;\n  Object.defineProperty(exports, \"PermissionStatus\", {\n    enumerable: true,\n    get: function () {\n      return _expoModulesCore.PermissionStatus;\n    }\n  });\n  exports.SortBy = void 0;\n  exports.addAssetsToAlbumAsync = addAssetsToAlbumAsync;\n  exports.addListener = addListener;\n  exports.albumNeedsMigrationAsync = albumNeedsMigrationAsync;\n  exports.createAlbumAsync = createAlbumAsync;\n  exports.createAssetAsync = createAssetAsync;\n  exports.deleteAlbumsAsync = deleteAlbumsAsync;\n  exports.deleteAssetsAsync = deleteAssetsAsync;\n  exports.getAlbumAsync = getAlbumAsync;\n  exports.getAlbumsAsync = getAlbumsAsync;\n  exports.getAssetInfoAsync = getAssetInfoAsync;\n  exports.getAssetsAsync = getAssetsAsync;\n  exports.getMomentsAsync = getMomentsAsync;\n  exports.getPermissionsAsync = getPermissionsAsync;\n  exports.isAvailableAsync = isAvailableAsync;\n  exports.migrateAlbumIfNeededAsync = migrateAlbumIfNeededAsync;\n  exports.presentPermissionsPickerAsync = presentPermissionsPickerAsync;\n  exports.removeAllListeners = removeAllListeners;\n  exports.removeAssetsFromAlbumAsync = removeAssetsFromAlbumAsync;\n  exports.removeSubscription = removeSubscription;\n  exports.requestPermissionsAsync = requestPermissionsAsync;\n  exports.saveToLibraryAsync = saveToLibraryAsync;\n  exports.usePermissions = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _expoModulesCore = require(_dependencyMap[2], \"expo-modules-core\");\n  var _reactNative = require(_dependencyMap[3], \"react-native\");\n  var _ExpoMediaLibrary = _interopRequireDefault(require(_dependencyMap[4], \"./ExpoMediaLibrary\"));\n  var isExpoGo = typeof expo !== 'undefined' && globalThis.expo?.modules?.ExpoGo;\n  var loggedExpoGoWarning = false;\n  if (isExpoGo && !loggedExpoGoWarning) {\n    console.warn('Due to changes in Androids permission requirements, Expo Go can no longer provide full access to the media library. To test the full functionality of this module, you can create a development build. https://docs.expo.dev/develop/development-builds/create-a-build');\n    loggedExpoGoWarning = true;\n  }\n  function arrayize(item) {\n    if (Array.isArray(item)) {\n      return item;\n    }\n    return item ? [item] : [];\n  }\n  function getId(ref) {\n    if (typeof ref === 'string') {\n      return ref;\n    }\n    return ref ? ref.id : undefined;\n  }\n  function checkAssetIds(assetIds) {\n    if (assetIds.some(id => !id || typeof id !== 'string')) {\n      throw new Error('Asset ID must be a string!');\n    }\n  }\n  function checkAlbumIds(albumIds) {\n    if (albumIds.some(id => !id || typeof id !== 'string')) {\n      throw new Error('Album ID must be a string!');\n    }\n  }\n  function checkMediaType(mediaType) {\n    if (Object.values(MediaType).indexOf(mediaType) === -1) {\n      throw new Error(`Invalid mediaType: ${mediaType}`);\n    }\n  }\n  function checkSortBy(sortBy) {\n    if (Array.isArray(sortBy)) {\n      checkSortByKey(sortBy[0]);\n      if (typeof sortBy[1] !== 'boolean') {\n        throw new Error('Invalid sortBy array argument. Second item must be a boolean!');\n      }\n    } else {\n      checkSortByKey(sortBy);\n    }\n  }\n  function checkSortByKey(sortBy) {\n    if (Object.values(SortBy).indexOf(sortBy) === -1) {\n      throw new Error(`Invalid sortBy key: ${sortBy}`);\n    }\n  }\n  function sortByOptionToString(sortBy) {\n    checkSortBy(sortBy);\n    if (Array.isArray(sortBy)) {\n      return `${sortBy[0]} ${sortBy[1] ? 'ASC' : 'DESC'}`;\n    }\n    return `${sortBy} DESC`;\n  }\n  function dateToNumber(value) {\n    return value instanceof Date ? value.getTime() : value;\n  }\n  // @needsAudit\n  /**\n   * Possible media types.\n   */\n  var MediaType = exports.MediaType = _ExpoMediaLibrary.default.MediaType;\n  // @needsAudit\n  /**\n   * Supported keys that can be used to sort `getAssetsAsync` results.\n   */\n  var SortBy = exports.SortBy = _ExpoMediaLibrary.default.SortBy;\n  // @needsAudit\n  /**\n   * Returns whether the Media Library API is enabled on the current device.\n   * @return A promise which fulfils with a `boolean`, indicating whether the Media Library API is\n   * available on the current device.\n   */\n  function isAvailableAsync() {\n    return _isAvailableAsync.apply(this, arguments);\n  } // @needsAudit @docsMissing\n  /**\n   * Asks the user to grant permissions for accessing media in user's media library.\n   * @param writeOnly\n   * @param granularPermissions - A list of [`GranularPermission`](#granularpermission) values. This parameter has an\n   * effect only on Android 13 and newer. By default, `expo-media-library` will ask for all possible permissions.\n   *\n   * > When using granular permissions with a custom config plugin configuration, make sure that all the requested permissions are included in the plugin.\n   * @return A promise that fulfils with [`PermissionResponse`](#permissionresponse) object.\n   */\n  function _isAvailableAsync() {\n    _isAvailableAsync = (0, _asyncToGenerator2.default)(function* () {\n      return !!_ExpoMediaLibrary.default && 'getAssetsAsync' in _ExpoMediaLibrary.default;\n    });\n    return _isAvailableAsync.apply(this, arguments);\n  }\n  function requestPermissionsAsync() {\n    return _requestPermissionsAsync.apply(this, arguments);\n  } // @needsAudit @docsMissing\n  /**\n   * Checks user's permissions for accessing media library.\n   * @param writeOnly\n   * @param granularPermissions - A list of [`GranularPermission`](#granularpermission) values. This parameter has\n   * an effect only on Android 13 and newer. By default, `expo-media-library` will ask for all possible permissions.\n   * @return A promise that fulfils with [`PermissionResponse`](#permissionresponse) object.\n   */\n  function _requestPermissionsAsync() {\n    _requestPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n      var writeOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var granularPermissions = arguments.length > 1 ? arguments[1] : undefined;\n      if (!_ExpoMediaLibrary.default.requestPermissionsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'requestPermissionsAsync');\n      }\n      if (_reactNative.Platform.OS === 'android') {\n        return yield _ExpoMediaLibrary.default.requestPermissionsAsync(writeOnly, granularPermissions);\n      }\n      return yield _ExpoMediaLibrary.default.requestPermissionsAsync(writeOnly);\n    });\n    return _requestPermissionsAsync.apply(this, arguments);\n  }\n  function getPermissionsAsync() {\n    return _getPermissionsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Check or request permissions to access the media library.\n   * This uses both `requestPermissionsAsync` and `getPermissionsAsync` to interact with the permissions.\n   *\n   * @example\n   * ```ts\n   * const [permissionResponse, requestPermission] = MediaLibrary.usePermissions();\n   * ```\n   */\n  function _getPermissionsAsync() {\n    _getPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n      var writeOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var granularPermissions = arguments.length > 1 ? arguments[1] : undefined;\n      if (!_ExpoMediaLibrary.default.getPermissionsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getPermissionsAsync');\n      }\n      if (_reactNative.Platform.OS === 'android') {\n        return yield _ExpoMediaLibrary.default.getPermissionsAsync(writeOnly, granularPermissions);\n      }\n      return yield _ExpoMediaLibrary.default.getPermissionsAsync(writeOnly);\n    });\n    return _getPermissionsAsync.apply(this, arguments);\n  }\n  var usePermissions = exports.usePermissions = (0, _expoModulesCore.createPermissionHook)({\n    // TODO(cedric): permission requesters should have an options param or a different requester\n    getMethod: options => getPermissionsAsync(options?.writeOnly, options?.granularPermissions),\n    requestMethod: options => requestPermissionsAsync(options?.writeOnly, options?.granularPermissions)\n  });\n  // @needsAudit\n  /**\n   * Allows the user to update the assets that your app has access to.\n   * The system modal is only displayed if the user originally allowed only `limited` access to their\n   * media library, otherwise this method is a no-op.\n   * @param mediaTypes Limits the type(s) of media that the user will be granting access to. By default, a list that shows both photos and videos is presented.\n   *\n   * @return A promise that either rejects if the method is unavailable, or resolves to `void`.\n   * > __Note:__ This method doesn't inform you if the user changes which assets your app has access to.\n   * That information is only exposed by iOS, and to obtain it, you need to subscribe for updates to the user's media library using [`addListener()`](#medialibraryaddlistenerlistener).\n   * If `hasIncrementalChanges` is `false`, the user changed their permissions.\n   *\n   * @platform android 14+\n   * @platform ios\n   */\n  function presentPermissionsPickerAsync() {\n    return _presentPermissionsPickerAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Creates an asset from existing file. The most common use case is to save a picture taken by [Camera](./camera).\n   * This method requires `CAMERA_ROLL` permission.\n   *\n   * @example\n   * ```js\n   * const { uri } = await Camera.takePictureAsync();\n   * const asset = await MediaLibrary.createAssetAsync(uri);\n   * ```\n   * @param localUri A URI to the image or video file. It must contain an extension. On Android it\n   * must be a local path, so it must start with `file:///`\n   *\n   * @param album An [Album](#album) or its ID. If provided, the asset will be added to this album upon creation, otherwise it will be added to the default album for the media type.\n   * The album has exist.\n   * @return A promise which fulfils with an object representing an [`Asset`](#asset).\n   */\n  function _presentPermissionsPickerAsync() {\n    _presentPermissionsPickerAsync = (0, _asyncToGenerator2.default)(function* () {\n      var mediaTypes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['photo', 'video'];\n      if (_reactNative.Platform.OS === 'android' && isExpoGo) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'presentPermissionsPickerAsync is unavailable in Expo Go');\n      }\n      if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= 34) {\n        yield _ExpoMediaLibrary.default.requestPermissionsAsync(false, mediaTypes);\n        return;\n      }\n      if (!_ExpoMediaLibrary.default.presentPermissionsPickerAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'presentPermissionsPickerAsync');\n      }\n      return yield _ExpoMediaLibrary.default.presentPermissionsPickerAsync();\n    });\n    return _presentPermissionsPickerAsync.apply(this, arguments);\n  }\n  function createAssetAsync(_x, _x2) {\n    return _createAssetAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Saves the file at given `localUri` to the user's media library. Unlike [`createAssetAsync()`](#medialibrarycreateassetasynclocaluri),\n   * This method doesn't return created asset.\n   * On __iOS 11+__, it's possible to use this method without asking for `CAMERA_ROLL` permission,\n   * however then yours `Info.plist` should have `NSPhotoLibraryAddUsageDescription` key.\n   * @param localUri A URI to the image or video file. It must contain an extension. On Android it\n   * must be a local path, so it must start with `file:///`.\n   */\n  function _createAssetAsync() {\n    _createAssetAsync = (0, _asyncToGenerator2.default)(function* (localUri, album) {\n      if (!_ExpoMediaLibrary.default.createAssetAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'createAssetAsync');\n      }\n      var albumId = getId(album);\n      if (!localUri || typeof localUri !== 'string') {\n        throw new Error('Invalid argument \"localUri\". It must be a string!');\n      }\n      var asset = yield _ExpoMediaLibrary.default.createAssetAsync(localUri, albumId);\n      if (Array.isArray(asset)) {\n        // Android returns an array with asset, we need to pick the first item\n        return asset[0];\n      }\n      return asset;\n    });\n    return _createAssetAsync.apply(this, arguments);\n  }\n  function saveToLibraryAsync(_x3) {\n    return _saveToLibraryAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Adds array of assets to the album.\n   *\n   * On Android, by default it copies assets from the current album to provided one, however it's also\n   * possible to move them by passing `false` as `copyAssets` argument. In case they're copied you\n   * should keep in mind that `getAssetsAsync` will return duplicated assets.\n   * @param assets An array of [Asset](#asset) or their IDs.\n   * @param album An [Album](#album) or its ID.\n   * @param copy __Android only.__ Whether to copy assets to the new album instead of move them.\n   * Defaults to `true`.\n   * @return Returns promise which fulfils with `true` if the assets were successfully added to\n   * the album.\n   */\n  function _saveToLibraryAsync() {\n    _saveToLibraryAsync = (0, _asyncToGenerator2.default)(function* (localUri) {\n      if (!_ExpoMediaLibrary.default.saveToLibraryAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'saveToLibraryAsync');\n      }\n      return yield _ExpoMediaLibrary.default.saveToLibraryAsync(localUri);\n    });\n    return _saveToLibraryAsync.apply(this, arguments);\n  }\n  function addAssetsToAlbumAsync(_x4, _x5) {\n    return _addAssetsToAlbumAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Removes given assets from album.\n   *\n   * On Android, album will be automatically deleted if there are no more assets inside.\n   * @param assets An array of [Asset](#asset) or their IDs.\n   * @param album An [Album](#album) or its ID.\n   * @return Returns promise which fulfils with `true` if the assets were successfully removed from\n   * the album.\n   */\n  function _addAssetsToAlbumAsync() {\n    _addAssetsToAlbumAsync = (0, _asyncToGenerator2.default)(function* (assets, album) {\n      var copy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (!_ExpoMediaLibrary.default.addAssetsToAlbumAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'addAssetsToAlbumAsync');\n      }\n      var assetIds = arrayize(assets).map(getId);\n      var albumId = getId(album);\n      checkAssetIds(assetIds);\n      if (!albumId || typeof albumId !== 'string') {\n        throw new Error('Invalid album ID. It must be a string!');\n      }\n      if (_reactNative.Platform.OS === 'ios') {\n        return yield _ExpoMediaLibrary.default.addAssetsToAlbumAsync(assetIds, albumId);\n      }\n      return yield _ExpoMediaLibrary.default.addAssetsToAlbumAsync(assetIds, albumId, !!copy);\n    });\n    return _addAssetsToAlbumAsync.apply(this, arguments);\n  }\n  function removeAssetsFromAlbumAsync(_x6, _x7) {\n    return _removeAssetsFromAlbumAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Deletes assets from the library. On iOS it deletes assets from all albums they belong to, while\n   * on Android it keeps all copies of them (album is strictly connected to the asset). Also, there is\n   * additional dialog on iOS that requires user to confirm this action.\n   * @param assets An array of [Asset](#asset) or their IDs.\n   * @return Returns promise which fulfils with `true` if the assets were successfully deleted.\n   */\n  function _removeAssetsFromAlbumAsync() {\n    _removeAssetsFromAlbumAsync = (0, _asyncToGenerator2.default)(function* (assets, album) {\n      if (!_ExpoMediaLibrary.default.removeAssetsFromAlbumAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'removeAssetsFromAlbumAsync');\n      }\n      var assetIds = arrayize(assets).map(getId);\n      var albumId = getId(album);\n      checkAssetIds(assetIds);\n      return yield _ExpoMediaLibrary.default.removeAssetsFromAlbumAsync(assetIds, albumId);\n    });\n    return _removeAssetsFromAlbumAsync.apply(this, arguments);\n  }\n  function deleteAssetsAsync(_x8) {\n    return _deleteAssetsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Provides more information about an asset, including GPS location, local URI and EXIF metadata.\n   * @param asset An [Asset](#asset) or its ID.\n   * @param options\n   * @return An [AssetInfo](#assetinfo) object, which is an `Asset` extended by an additional fields.\n   */\n  function _deleteAssetsAsync() {\n    _deleteAssetsAsync = (0, _asyncToGenerator2.default)(function* (assets) {\n      if (!_ExpoMediaLibrary.default.deleteAssetsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'deleteAssetsAsync');\n      }\n      var assetIds = arrayize(assets).map(getId);\n      checkAssetIds(assetIds);\n      return yield _ExpoMediaLibrary.default.deleteAssetsAsync(assetIds);\n    });\n    return _deleteAssetsAsync.apply(this, arguments);\n  }\n  function getAssetInfoAsync(_x9) {\n    return _getAssetInfoAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Queries for user-created albums in media gallery.\n   * @return A promise which fulfils with an array of [`Album`](#asset)s. Depending on Android version,\n   * root directory of your storage may be listed as album titled `\"0\"` or unlisted at all.\n   */\n  function _getAssetInfoAsync() {\n    _getAssetInfoAsync = (0, _asyncToGenerator2.default)(function* (asset) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        shouldDownloadFromNetwork: true\n      };\n      if (!_ExpoMediaLibrary.default.getAssetInfoAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getAssetInfoAsync');\n      }\n      var assetId = getId(asset);\n      checkAssetIds([assetId]);\n      var assetInfo = yield _ExpoMediaLibrary.default.getAssetInfoAsync(assetId, options);\n      if (Array.isArray(assetInfo)) {\n        // Android returns an array with asset info, we need to pick the first item\n        return assetInfo[0];\n      }\n      return assetInfo;\n    });\n    return _getAssetInfoAsync.apply(this, arguments);\n  }\n  function getAlbumsAsync() {\n    return _getAlbumsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Queries for an album with a specific name.\n   * @param title Name of the album to look for.\n   * @return An object representing an [`Album`](#album), if album with given name exists, otherwise\n   * returns `null`.\n   */\n  function _getAlbumsAsync() {\n    _getAlbumsAsync = (0, _asyncToGenerator2.default)(function* () {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$includeSmartAlbu = _ref.includeSmartAlbums,\n        includeSmartAlbums = _ref$includeSmartAlbu === void 0 ? false : _ref$includeSmartAlbu;\n      if (!_ExpoMediaLibrary.default.getAlbumsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getAlbumsAsync');\n      }\n      return yield _ExpoMediaLibrary.default.getAlbumsAsync({\n        includeSmartAlbums\n      });\n    });\n    return _getAlbumsAsync.apply(this, arguments);\n  }\n  function getAlbumAsync(_x0) {\n    return _getAlbumAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Creates an album with given name and initial asset. The asset parameter is required on Android,\n   * since it's not possible to create empty album on this platform. On Android, by default it copies\n   * given asset from the current album to the new one, however it's also possible to move it by\n   * passing `false` as `copyAsset` argument.\n   * In case it's copied you should keep in mind that `getAssetsAsync` will return duplicated asset.\n   * > On Android, it's not possible to create an empty album. You must provide an existing asset to copy or move into the album or an uri of a local file, which will be used to create an initial asset for the album.\n   * @param albumName Name of the album to create.\n   * @param asset An [Asset](#asset) or its ID. On Android you either need to provide an asset or a localUri.\n   * @param initialAssetLocalUri A URI to the local media file, which will be used to create the initial asset inside the album. It must contain an extension. On Android it\n   * must be a local path, so it must start with `file:///`. If the `asset` was provided, this parameter will be ignored.\n   * @param copyAsset __Android Only.__ Whether to copy asset to the new album instead of move it. This parameter is ignored if `asset` was not provided.\n   * Defaults to `true`.\n   * @return Newly created [`Album`](#album).\n   */\n  function _getAlbumAsync() {\n    _getAlbumAsync = (0, _asyncToGenerator2.default)(function* (title) {\n      if (!_ExpoMediaLibrary.default.getAlbumAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getAlbumAsync');\n      }\n      if (typeof title !== 'string') {\n        throw new Error('Album title must be a string!');\n      }\n      return yield _ExpoMediaLibrary.default.getAlbumAsync(title);\n    });\n    return _getAlbumAsync.apply(this, arguments);\n  }\n  function createAlbumAsync(_x1, _x10) {\n    return _createAlbumAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Deletes given albums from the library. On Android by default it deletes assets belonging to given\n   * albums from the library. On iOS it doesn't delete these assets, however it's possible to do by\n   * passing `true` as `deleteAssets`.\n   * @param albums An array of [`Album`](#asset)s or their IDs.\n   * @param assetRemove __iOS Only.__ Whether to also delete assets belonging to given albums.\n   * Defaults to `false`.\n   * @return Returns a promise which fulfils with `true` if the albums were successfully deleted from\n   * the library.\n   */\n  function _createAlbumAsync() {\n    _createAlbumAsync = (0, _asyncToGenerator2.default)(function* (albumName, asset) {\n      var copyAsset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var initialAssetLocalUri = arguments.length > 3 ? arguments[3] : undefined;\n      if (!_ExpoMediaLibrary.default.createAlbumAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'createAlbumAsync');\n      }\n      var assetId = getId(asset);\n      if (_reactNative.Platform.OS === 'android' && (typeof assetId !== 'string' || assetId.length === 0) && !initialAssetLocalUri) {\n        // it's not possible to create empty album on Android, so initial asset must be provided\n        throw new Error('MediaLibrary.createAlbumAsync must be called with an asset or a localUri on Android.');\n      }\n      if (!albumName || typeof albumName !== 'string') {\n        throw new Error('Invalid argument \"albumName\". It must be a string!');\n      }\n      if (assetId != null && typeof assetId !== 'string') {\n        throw new Error('Asset ID must be a string!');\n      }\n      if (_reactNative.Platform.OS === 'ios') {\n        return yield _ExpoMediaLibrary.default.createAlbumAsync(albumName, assetId, initialAssetLocalUri);\n      }\n      return yield _ExpoMediaLibrary.default.createAlbumAsync(albumName, assetId, !!copyAsset, initialAssetLocalUri);\n    });\n    return _createAlbumAsync.apply(this, arguments);\n  }\n  function deleteAlbumsAsync(_x11) {\n    return _deleteAlbumsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Fetches a page of assets matching the provided criteria.\n   * @param assetsOptions\n   * @return A promise that fulfils with to [`PagedInfo`](#pagedinfo) object with array of [`Asset`](#asset)s.\n   */\n  function _deleteAlbumsAsync() {\n    _deleteAlbumsAsync = (0, _asyncToGenerator2.default)(function* (albums) {\n      var assetRemove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!_ExpoMediaLibrary.default.deleteAlbumsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'deleteAlbumsAsync');\n      }\n      var albumIds = arrayize(albums).map(getId);\n      checkAlbumIds(albumIds);\n      if (_reactNative.Platform.OS === 'android') {\n        return yield _ExpoMediaLibrary.default.deleteAlbumsAsync(albumIds);\n      }\n      return yield _ExpoMediaLibrary.default.deleteAlbumsAsync(albumIds, !!assetRemove);\n    });\n    return _deleteAlbumsAsync.apply(this, arguments);\n  }\n  function getAssetsAsync() {\n    return _getAssetsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Subscribes for updates in user's media library.\n   * @param listener A callback that is fired when any assets have been inserted or deleted from the\n   * library. On Android it's invoked with an empty object. On iOS, it's invoked with [`MediaLibraryAssetsChangeEvent`](#medialibraryassetschangeevent)\n   * object.\n   *\n   * Additionally, only on iOS, the listener is also invoked when the user changes access to individual assets in the media library\n   * using `presentPermissionsPickerAsync()`.\n   * @return An [`Subscription`](#subscription) object that you can call `remove()` on when you would\n   * like to unsubscribe the listener.\n   */\n  function _getAssetsAsync() {\n    _getAssetsAsync = (0, _asyncToGenerator2.default)(function* () {\n      var assetsOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!_ExpoMediaLibrary.default.getAssetsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getAssetsAsync');\n      }\n      var first = assetsOptions.first,\n        after = assetsOptions.after,\n        album = assetsOptions.album,\n        sortBy = assetsOptions.sortBy,\n        mediaType = assetsOptions.mediaType,\n        createdAfter = assetsOptions.createdAfter,\n        createdBefore = assetsOptions.createdBefore,\n        mediaSubtypes = assetsOptions.mediaSubtypes,\n        resolveWithFullInfo = assetsOptions.resolveWithFullInfo;\n      var options = {\n        first: first == null ? 20 : first,\n        after: getId(after),\n        album: getId(album),\n        sortBy: arrayize(sortBy),\n        mediaType: arrayize(mediaType || [MediaType.photo]),\n        mediaSubtypes: arrayize(mediaSubtypes),\n        createdAfter: dateToNumber(createdAfter),\n        createdBefore: dateToNumber(createdBefore),\n        resolveWithFullInfo: resolveWithFullInfo ?? false\n      };\n      if (first != null && typeof options.first !== 'number') {\n        throw new Error('Option \"first\" must be a number!');\n      }\n      if (after != null && typeof options.after !== 'string') {\n        throw new Error('Option \"after\" must be a string!');\n      }\n      if (album != null && typeof options.album !== 'string') {\n        throw new Error('Option \"album\" must be a string!');\n      }\n      if (after != null && _reactNative.Platform.OS === 'android' && isNaN(parseInt(getId(after), 10))) {\n        throw new Error('Option \"after\" must be a valid ID!');\n      }\n      if (first != null && first < 0) {\n        throw new Error('Option \"first\" must be a positive integer!');\n      }\n      options.mediaType.forEach(checkMediaType);\n      // TODO(@kitten): Add expected native types for `MediaLibrary`\n      return yield _ExpoMediaLibrary.default.getAssetsAsync({\n        ...options,\n        sortBy: options.sortBy.map(sortByOptionToString)\n      });\n    });\n    return _getAssetsAsync.apply(this, arguments);\n  }\n  function addListener(listener) {\n    return _ExpoMediaLibrary.default.addListener(_ExpoMediaLibrary.default.CHANGE_LISTENER_NAME, listener);\n  }\n  // @docsMissing\n  function removeSubscription(subscription) {\n    subscription.remove();\n  }\n  // @needsAudit\n  /**\n   * Removes all listeners.\n   */\n  function removeAllListeners() {\n    _ExpoMediaLibrary.default.removeAllListeners(_ExpoMediaLibrary.default.CHANGE_LISTENER_NAME);\n  }\n  // @needsAudit\n  /**\n   * Fetches a list of moments, which is a group of assets taken around the same place\n   * and time.\n   * @return An array of [albums](#album) whose type is `moment`.\n   * @platform ios\n   */\n  function getMomentsAsync() {\n    return _getMomentsAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Moves album content to the special media directories on **Android R** or **above** if needed.\n   * Those new locations are in line with the Android `scoped storage` - so your application won't\n   * lose write permission to those directories in the future.\n   *\n   * This method does nothing if:\n   * - app is running on **iOS**, **web** or **Android below R**\n   * - app has **write permission** to the album folder\n   *\n   * The migration is possible when the album contains only compatible files types.\n   * For instance, movies and pictures are compatible with each other, but music and pictures are not.\n   * If automatic migration isn't possible, the function rejects.\n   * In that case, you can use methods from the `expo-file-system` to migrate all your files manually.\n   *\n   * # Why do you need to migrate files?\n   * __Android R__ introduced a lot of changes in the storage system. Now applications can't save\n   * anything to the root directory. The only available locations are from the `MediaStore` API.\n   * Unfortunately, the media library stored albums in folders for which, because of those changes,\n   * the application doesn't have permissions anymore. However, it doesn't mean you need to migrate\n   * all your albums. If your application doesn't add assets to albums, you don't have to migrate.\n   * Everything will work as it used to. You can read more about scoped storage in [the Android documentation](https://developer.android.com/about/versions/11/privacy/storage).\n   *\n   * @param album An [Album](#album) or its ID.\n   * @return A promise which fulfils to `void`.\n   */\n  function _getMomentsAsync() {\n    _getMomentsAsync = (0, _asyncToGenerator2.default)(function* () {\n      if (!_ExpoMediaLibrary.default.getMomentsAsync) {\n        throw new _expoModulesCore.UnavailabilityError('MediaLibrary', 'getMomentsAsync');\n      }\n      return yield _ExpoMediaLibrary.default.getMomentsAsync();\n    });\n    return _getMomentsAsync.apply(this, arguments);\n  }\n  function migrateAlbumIfNeededAsync(_x12) {\n    return _migrateAlbumIfNeededAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Checks if the album should be migrated to a different location. In other words, it checks if the\n   * application has the write permission to the album folder. If not, it returns `true`, otherwise `false`.\n   * > Note: For **Android below R**, **web** or **iOS**, this function always returns `false`.\n   * @param album An [Album](#album) or its ID.\n   * @return Returns a promise which fulfils with `true` if the album should be migrated.\n   */\n  function _migrateAlbumIfNeededAsync() {\n    _migrateAlbumIfNeededAsync = (0, _asyncToGenerator2.default)(function* (album) {\n      if (!_ExpoMediaLibrary.default.migrateAlbumIfNeededAsync) {\n        return;\n      }\n      return yield _ExpoMediaLibrary.default.migrateAlbumIfNeededAsync(getId(album));\n    });\n    return _migrateAlbumIfNeededAsync.apply(this, arguments);\n  }\n  function albumNeedsMigrationAsync(_x13) {\n    return _albumNeedsMigrationAsync.apply(this, arguments);\n  }\n  function _albumNeedsMigrationAsync() {\n    _albumNeedsMigrationAsync = (0, _asyncToGenerator2.default)(function* (album) {\n      if (!_ExpoMediaLibrary.default.albumNeedsMigrationAsync) {\n        return false;\n      }\n      return yield _ExpoMediaLibrary.default.albumNeedsMigrationAsync(getId(album));\n    });\n    return _albumNeedsMigrationAsync.apply(this, arguments);\n  }\n});","lineCount":659,"map":[[37,2,1,0],[37,6,1,0,"_expoModulesCore"],[37,22,1,0],[37,25,1,0,"require"],[37,32,1,0],[37,33,1,0,"_dependencyMap"],[37,47,1,0],[38,2,2,0],[38,6,2,0,"_reactNative"],[38,18,2,0],[38,21,2,0,"require"],[38,28,2,0],[38,29,2,0,"_dependencyMap"],[38,43,2,0],[39,2,3,0],[39,6,3,0,"_ExpoMediaLibrary"],[39,23,3,0],[39,26,3,0,"_interopRequireDefault"],[39,48,3,0],[39,49,3,0,"require"],[39,56,3,0],[39,57,3,0,"_dependencyMap"],[39,71,3,0],[40,2,4,0],[40,6,4,6,"isExpoGo"],[40,14,4,14],[40,17,4,17],[40,24,4,24,"expo"],[40,28,4,28],[40,33,4,33],[40,44,4,44],[40,48,4,48,"globalThis"],[40,58,4,58],[40,59,4,59,"expo"],[40,63,4,63],[40,65,4,65,"modules"],[40,72,4,72],[40,74,4,74,"ExpoGo"],[40,80,4,80],[41,2,5,0],[41,6,5,4,"loggedExpoGoWarning"],[41,25,5,23],[41,28,5,26],[41,33,5,31],[42,2,6,0],[42,6,6,4,"isExpoGo"],[42,14,6,12],[42,18,6,16],[42,19,6,17,"loggedExpoGoWarning"],[42,38,6,36],[42,40,6,38],[43,4,7,4,"console"],[43,11,7,11],[43,12,7,12,"warn"],[43,16,7,16],[43,17,7,17],[43,281,7,281],[43,282,7,282],[44,4,8,4,"loggedExpoGoWarning"],[44,23,8,23],[44,26,8,26],[44,30,8,30],[45,2,9,0],[46,2,11,0],[46,11,11,9,"arrayize"],[46,19,11,17,"arrayize"],[46,20,11,18,"item"],[46,24,11,22],[46,26,11,24],[47,4,12,4],[47,8,12,8,"Array"],[47,13,12,13],[47,14,12,14,"isArray"],[47,21,12,21],[47,22,12,22,"item"],[47,26,12,26],[47,27,12,27],[47,29,12,29],[48,6,13,8],[48,13,13,15,"item"],[48,17,13,19],[49,4,14,4],[50,4,15,4],[50,11,15,11,"item"],[50,15,15,15],[50,18,15,18],[50,19,15,19,"item"],[50,23,15,23],[50,24,15,24],[50,27,15,27],[50,29,15,29],[51,2,16,0],[52,2,17,0],[52,11,17,9,"getId"],[52,16,17,14,"getId"],[52,17,17,15,"ref"],[52,20,17,18],[52,22,17,20],[53,4,18,4],[53,8,18,8],[53,15,18,15,"ref"],[53,18,18,18],[53,23,18,23],[53,31,18,31],[53,33,18,33],[54,6,19,8],[54,13,19,15,"ref"],[54,16,19,18],[55,4,20,4],[56,4,21,4],[56,11,21,11,"ref"],[56,14,21,14],[56,17,21,17,"ref"],[56,20,21,20],[56,21,21,21,"id"],[56,23,21,23],[56,26,21,26,"undefined"],[56,35,21,35],[57,2,22,0],[58,2,23,0],[58,11,23,9,"checkAssetIds"],[58,24,23,22,"checkAssetIds"],[58,25,23,23,"assetIds"],[58,33,23,31],[58,35,23,33],[59,4,24,4],[59,8,24,8,"assetIds"],[59,16,24,16],[59,17,24,17,"some"],[59,21,24,21],[59,22,24,23,"id"],[59,24,24,25],[59,28,24,30],[59,29,24,31,"id"],[59,31,24,33],[59,35,24,37],[59,42,24,44,"id"],[59,44,24,46],[59,49,24,51],[59,57,24,59],[59,58,24,60],[59,60,24,62],[60,6,25,8],[60,12,25,14],[60,16,25,18,"Error"],[60,21,25,23],[60,22,25,24],[60,50,25,52],[60,51,25,53],[61,4,26,4],[62,2,27,0],[63,2,28,0],[63,11,28,9,"checkAlbumIds"],[63,24,28,22,"checkAlbumIds"],[63,25,28,23,"albumIds"],[63,33,28,31],[63,35,28,33],[64,4,29,4],[64,8,29,8,"albumIds"],[64,16,29,16],[64,17,29,17,"some"],[64,21,29,21],[64,22,29,23,"id"],[64,24,29,25],[64,28,29,30],[64,29,29,31,"id"],[64,31,29,33],[64,35,29,37],[64,42,29,44,"id"],[64,44,29,46],[64,49,29,51],[64,57,29,59],[64,58,29,60],[64,60,29,62],[65,6,30,8],[65,12,30,14],[65,16,30,18,"Error"],[65,21,30,23],[65,22,30,24],[65,50,30,52],[65,51,30,53],[66,4,31,4],[67,2,32,0],[68,2,33,0],[68,11,33,9,"checkMediaType"],[68,25,33,23,"checkMediaType"],[68,26,33,24,"mediaType"],[68,35,33,33],[68,37,33,35],[69,4,34,4],[69,8,34,8,"Object"],[69,14,34,14],[69,15,34,15,"values"],[69,21,34,21],[69,22,34,22,"MediaType"],[69,31,34,31],[69,32,34,32],[69,33,34,33,"indexOf"],[69,40,34,40],[69,41,34,41,"mediaType"],[69,50,34,50],[69,51,34,51],[69,56,34,56],[69,57,34,57],[69,58,34,58],[69,60,34,60],[70,6,35,8],[70,12,35,14],[70,16,35,18,"Error"],[70,21,35,23],[70,22,35,24],[70,44,35,46,"mediaType"],[70,53,35,55],[70,55,35,57],[70,56,35,58],[71,4,36,4],[72,2,37,0],[73,2,38,0],[73,11,38,9,"checkSortBy"],[73,22,38,20,"checkSortBy"],[73,23,38,21,"sortBy"],[73,29,38,27],[73,31,38,29],[74,4,39,4],[74,8,39,8,"Array"],[74,13,39,13],[74,14,39,14,"isArray"],[74,21,39,21],[74,22,39,22,"sortBy"],[74,28,39,28],[74,29,39,29],[74,31,39,31],[75,6,40,8,"checkSortByKey"],[75,20,40,22],[75,21,40,23,"sortBy"],[75,27,40,29],[75,28,40,30],[75,29,40,31],[75,30,40,32],[75,31,40,33],[76,6,41,8],[76,10,41,12],[76,17,41,19,"sortBy"],[76,23,41,25],[76,24,41,26],[76,25,41,27],[76,26,41,28],[76,31,41,33],[76,40,41,42],[76,42,41,44],[77,8,42,12],[77,14,42,18],[77,18,42,22,"Error"],[77,23,42,27],[77,24,42,28],[77,87,42,91],[77,88,42,92],[78,6,43,8],[79,4,44,4],[79,5,44,5],[79,11,45,9],[80,6,46,8,"checkSortByKey"],[80,20,46,22],[80,21,46,23,"sortBy"],[80,27,46,29],[80,28,46,30],[81,4,47,4],[82,2,48,0],[83,2,49,0],[83,11,49,9,"checkSortByKey"],[83,25,49,23,"checkSortByKey"],[83,26,49,24,"sortBy"],[83,32,49,30],[83,34,49,32],[84,4,50,4],[84,8,50,8,"Object"],[84,14,50,14],[84,15,50,15,"values"],[84,21,50,21],[84,22,50,22,"SortBy"],[84,28,50,28],[84,29,50,29],[84,30,50,30,"indexOf"],[84,37,50,37],[84,38,50,38,"sortBy"],[84,44,50,44],[84,45,50,45],[84,50,50,50],[84,51,50,51],[84,52,50,52],[84,54,50,54],[85,6,51,8],[85,12,51,14],[85,16,51,18,"Error"],[85,21,51,23],[85,22,51,24],[85,45,51,47,"sortBy"],[85,51,51,53],[85,53,51,55],[85,54,51,56],[86,4,52,4],[87,2,53,0],[88,2,54,0],[88,11,54,9,"sortByOptionToString"],[88,31,54,29,"sortByOptionToString"],[88,32,54,30,"sortBy"],[88,38,54,36],[88,40,54,38],[89,4,55,4,"checkSortBy"],[89,15,55,15],[89,16,55,16,"sortBy"],[89,22,55,22],[89,23,55,23],[90,4,56,4],[90,8,56,8,"Array"],[90,13,56,13],[90,14,56,14,"isArray"],[90,21,56,21],[90,22,56,22,"sortBy"],[90,28,56,28],[90,29,56,29],[90,31,56,31],[91,6,57,8],[91,13,57,15],[91,16,57,18,"sortBy"],[91,22,57,24],[91,23,57,25],[91,24,57,26],[91,25,57,27],[91,29,57,31,"sortBy"],[91,35,57,37],[91,36,57,38],[91,37,57,39],[91,38,57,40],[91,41,57,43],[91,46,57,48],[91,49,57,51],[91,55,57,57],[91,57,57,59],[92,4,58,4],[93,4,59,4],[93,11,59,11],[93,14,59,14,"sortBy"],[93,20,59,20],[93,27,59,27],[94,2,60,0],[95,2,61,0],[95,11,61,9,"dateToNumber"],[95,23,61,21,"dateToNumber"],[95,24,61,22,"value"],[95,29,61,27],[95,31,61,29],[96,4,62,4],[96,11,62,11,"value"],[96,16,62,16],[96,28,62,28,"Date"],[96,32,62,32],[96,35,62,35,"value"],[96,40,62,40],[96,41,62,41,"getTime"],[96,48,62,48],[96,49,62,49],[96,50,62,50],[96,53,62,53,"value"],[96,58,62,58],[97,2,63,0],[98,2,64,0],[99,2,65,0],[100,0,66,0],[101,0,67,0],[102,2,68,7],[102,6,68,13,"MediaType"],[102,15,68,22],[102,18,68,22,"exports"],[102,25,68,22],[102,26,68,22,"MediaType"],[102,35,68,22],[102,38,68,25,"MediaLibrary"],[102,63,68,37],[102,64,68,38,"MediaType"],[102,73,68,47],[103,2,69,0],[104,2,70,0],[105,0,71,0],[106,0,72,0],[107,2,73,7],[107,6,73,13,"SortBy"],[107,12,73,19],[107,15,73,19,"exports"],[107,22,73,19],[107,23,73,19,"SortBy"],[107,29,73,19],[107,32,73,22,"MediaLibrary"],[107,57,73,34],[107,58,73,35,"SortBy"],[107,64,73,41],[108,2,74,0],[109,2,75,0],[110,0,76,0],[111,0,77,0],[112,0,78,0],[113,0,79,0],[114,2,75,0],[114,11,80,22,"isAvailableAsync"],[114,27,80,38,"isAvailableAsync"],[114,28,80,38],[115,4,80,38],[115,11,80,38,"_isAvailableAsync"],[115,28,80,38],[115,29,80,38,"apply"],[115,34,80,38],[115,41,80,38,"arguments"],[115,50,80,38],[116,2,80,38],[116,4,83,0],[117,2,84,0],[118,0,85,0],[119,0,86,0],[120,0,87,0],[121,0,88,0],[122,0,89,0],[123,0,90,0],[124,0,91,0],[125,0,92,0],[126,2,84,0],[126,11,84,0,"_isAvailableAsync"],[126,29,84,0],[127,4,84,0,"_isAvailableAsync"],[127,21,84,0],[127,28,84,0,"_asyncToGenerator2"],[127,46,84,0],[127,47,84,0,"default"],[127,54,84,0],[127,56,80,7],[127,69,80,41],[128,6,81,4],[128,13,81,11],[128,14,81,12],[128,15,81,13,"MediaLibrary"],[128,40,81,25],[128,44,81,29],[128,60,81,45],[128,64,81,49,"MediaLibrary"],[128,89,81,61],[129,4,82,0],[129,5,82,1],[130,4,82,1],[130,11,82,1,"_isAvailableAsync"],[130,28,82,1],[130,29,82,1,"apply"],[130,34,82,1],[130,41,82,1,"arguments"],[130,50,82,1],[131,2,82,1],[132,2,82,1],[132,11,93,22,"requestPermissionsAsync"],[132,34,93,45,"requestPermissionsAsync"],[132,35,93,45],[133,4,93,45],[133,11,93,45,"_requestPermissionsAsync"],[133,35,93,45],[133,36,93,45,"apply"],[133,41,93,45],[133,48,93,45,"arguments"],[133,57,93,45],[134,2,93,45],[134,4,102,0],[135,2,103,0],[136,0,104,0],[137,0,105,0],[138,0,106,0],[139,0,107,0],[140,0,108,0],[141,0,109,0],[142,2,103,0],[142,11,103,0,"_requestPermissionsAsync"],[142,36,103,0],[143,4,103,0,"_requestPermissionsAsync"],[143,28,103,0],[143,35,103,0,"_asyncToGenerator2"],[143,53,103,0],[143,54,103,0,"default"],[143,61,103,0],[143,63,93,7],[143,76,93,86],[144,6,93,86],[144,10,93,46,"writeOnly"],[144,19,93,55],[144,22,93,55,"arguments"],[144,31,93,55],[144,32,93,55,"length"],[144,38,93,55],[144,46,93,55,"arguments"],[144,55,93,55],[144,63,93,55,"undefined"],[144,72,93,55],[144,75,93,55,"arguments"],[144,84,93,55],[144,90,93,58],[144,95,93,63],[145,6,93,63],[145,10,93,65,"granularPermissions"],[145,29,93,84],[145,32,93,84,"arguments"],[145,41,93,84],[145,42,93,84,"length"],[145,48,93,84],[145,55,93,84,"arguments"],[145,64,93,84],[145,70,93,84,"undefined"],[145,79,93,84],[146,6,94,4],[146,10,94,8],[146,11,94,9,"MediaLibrary"],[146,36,94,21],[146,37,94,22,"requestPermissionsAsync"],[146,60,94,45],[146,62,94,47],[147,8,95,8],[147,14,95,14],[147,18,95,18,"UnavailabilityError"],[147,54,95,37],[147,55,95,38],[147,69,95,52],[147,71,95,54],[147,96,95,79],[147,97,95,80],[148,6,96,4],[149,6,97,4],[149,10,97,8,"Platform"],[149,31,97,16],[149,32,97,17,"OS"],[149,34,97,19],[149,39,97,24],[149,48,97,33],[149,50,97,35],[150,8,98,8],[150,21,98,21,"MediaLibrary"],[150,46,98,33],[150,47,98,34,"requestPermissionsAsync"],[150,70,98,57],[150,71,98,58,"writeOnly"],[150,80,98,67],[150,82,98,69,"granularPermissions"],[150,101,98,88],[150,102,98,89],[151,6,99,4],[152,6,100,4],[152,19,100,17,"MediaLibrary"],[152,44,100,29],[152,45,100,30,"requestPermissionsAsync"],[152,68,100,53],[152,69,100,54,"writeOnly"],[152,78,100,63],[152,79,100,64],[153,4,101,0],[153,5,101,1],[154,4,101,1],[154,11,101,1,"_requestPermissionsAsync"],[154,35,101,1],[154,36,101,1,"apply"],[154,41,101,1],[154,48,101,1,"arguments"],[154,57,101,1],[155,2,101,1],[156,2,101,1],[156,11,110,22,"getPermissionsAsync"],[156,30,110,41,"getPermissionsAsync"],[156,31,110,41],[157,4,110,41],[157,11,110,41,"_getPermissionsAsync"],[157,31,110,41],[157,32,110,41,"apply"],[157,37,110,41],[157,44,110,41,"arguments"],[157,53,110,41],[158,2,110,41],[158,4,119,0],[159,2,120,0],[160,0,121,0],[161,0,122,0],[162,0,123,0],[163,0,124,0],[164,0,125,0],[165,0,126,0],[166,0,127,0],[167,0,128,0],[168,2,120,0],[168,11,120,0,"_getPermissionsAsync"],[168,32,120,0],[169,4,120,0,"_getPermissionsAsync"],[169,24,120,0],[169,31,120,0,"_asyncToGenerator2"],[169,49,120,0],[169,50,120,0,"default"],[169,57,120,0],[169,59,110,7],[169,72,110,82],[170,6,110,82],[170,10,110,42,"writeOnly"],[170,19,110,51],[170,22,110,51,"arguments"],[170,31,110,51],[170,32,110,51,"length"],[170,38,110,51],[170,46,110,51,"arguments"],[170,55,110,51],[170,63,110,51,"undefined"],[170,72,110,51],[170,75,110,51,"arguments"],[170,84,110,51],[170,90,110,54],[170,95,110,59],[171,6,110,59],[171,10,110,61,"granularPermissions"],[171,29,110,80],[171,32,110,80,"arguments"],[171,41,110,80],[171,42,110,80,"length"],[171,48,110,80],[171,55,110,80,"arguments"],[171,64,110,80],[171,70,110,80,"undefined"],[171,79,110,80],[172,6,111,4],[172,10,111,8],[172,11,111,9,"MediaLibrary"],[172,36,111,21],[172,37,111,22,"getPermissionsAsync"],[172,56,111,41],[172,58,111,43],[173,8,112,8],[173,14,112,14],[173,18,112,18,"UnavailabilityError"],[173,54,112,37],[173,55,112,38],[173,69,112,52],[173,71,112,54],[173,92,112,75],[173,93,112,76],[174,6,113,4],[175,6,114,4],[175,10,114,8,"Platform"],[175,31,114,16],[175,32,114,17,"OS"],[175,34,114,19],[175,39,114,24],[175,48,114,33],[175,50,114,35],[176,8,115,8],[176,21,115,21,"MediaLibrary"],[176,46,115,33],[176,47,115,34,"getPermissionsAsync"],[176,66,115,53],[176,67,115,54,"writeOnly"],[176,76,115,63],[176,78,115,65,"granularPermissions"],[176,97,115,84],[176,98,115,85],[177,6,116,4],[178,6,117,4],[178,19,117,17,"MediaLibrary"],[178,44,117,29],[178,45,117,30,"getPermissionsAsync"],[178,64,117,49],[178,65,117,50,"writeOnly"],[178,74,117,59],[178,75,117,60],[179,4,118,0],[179,5,118,1],[180,4,118,1],[180,11,118,1,"_getPermissionsAsync"],[180,31,118,1],[180,32,118,1,"apply"],[180,37,118,1],[180,44,118,1,"arguments"],[180,53,118,1],[181,2,118,1],[182,2,129,7],[182,6,129,13,"usePermissions"],[182,20,129,27],[182,23,129,27,"exports"],[182,30,129,27],[182,31,129,27,"usePermissions"],[182,45,129,27],[182,48,129,30],[182,52,129,30,"createPermissionHook"],[182,89,129,50],[182,91,129,51],[183,4,130,4],[184,4,131,4,"getMethod"],[184,13,131,13],[184,15,131,16,"options"],[184,22,131,23],[184,26,131,28,"getPermissionsAsync"],[184,45,131,47],[184,46,131,48,"options"],[184,53,131,55],[184,55,131,57,"writeOnly"],[184,64,131,66],[184,66,131,68,"options"],[184,73,131,75],[184,75,131,77,"granularPermissions"],[184,94,131,96],[184,95,131,97],[185,4,132,4,"requestMethod"],[185,17,132,17],[185,19,132,20,"options"],[185,26,132,27],[185,30,132,32,"requestPermissionsAsync"],[185,53,132,55],[185,54,132,56,"options"],[185,61,132,63],[185,63,132,65,"writeOnly"],[185,72,132,74],[185,74,132,76,"options"],[185,81,132,83],[185,83,132,85,"granularPermissions"],[185,102,132,104],[186,2,133,0],[186,3,133,1],[186,4,133,2],[187,2,134,0],[188,2,135,0],[189,0,136,0],[190,0,137,0],[191,0,138,0],[192,0,139,0],[193,0,140,0],[194,0,141,0],[195,0,142,0],[196,0,143,0],[197,0,144,0],[198,0,145,0],[199,0,146,0],[200,0,147,0],[201,0,148,0],[202,2,135,0],[202,11,149,22,"presentPermissionsPickerAsync"],[202,40,149,51,"presentPermissionsPickerAsync"],[202,41,149,51],[203,4,149,51],[203,11,149,51,"_presentPermissionsPickerAsync"],[203,41,149,51],[203,42,149,51,"apply"],[203,47,149,51],[203,54,149,51,"arguments"],[203,63,149,51],[204,2,149,51],[204,4,162,0],[205,2,163,0],[206,0,164,0],[207,0,165,0],[208,0,166,0],[209,0,167,0],[210,0,168,0],[211,0,169,0],[212,0,170,0],[213,0,171,0],[214,0,172,0],[215,0,173,0],[216,0,174,0],[217,0,175,0],[218,0,176,0],[219,0,177,0],[220,0,178,0],[221,2,163,0],[221,11,163,0,"_presentPermissionsPickerAsync"],[221,42,163,0],[222,4,163,0,"_presentPermissionsPickerAsync"],[222,34,163,0],[222,41,163,0,"_asyncToGenerator2"],[222,59,163,0],[222,60,163,0,"default"],[222,67,163,0],[222,69,149,7],[222,82,149,85],[223,6,149,85],[223,10,149,52,"mediaTypes"],[223,20,149,62],[223,23,149,62,"arguments"],[223,32,149,62],[223,33,149,62,"length"],[223,39,149,62],[223,47,149,62,"arguments"],[223,56,149,62],[223,64,149,62,"undefined"],[223,73,149,62],[223,76,149,62,"arguments"],[223,85,149,62],[223,91,149,65],[223,92,149,66],[223,99,149,73],[223,101,149,75],[223,108,149,82],[223,109,149,83],[224,6,150,4],[224,10,150,8,"Platform"],[224,31,150,16],[224,32,150,17,"OS"],[224,34,150,19],[224,39,150,24],[224,48,150,33],[224,52,150,37,"isExpoGo"],[224,60,150,45],[224,62,150,47],[225,8,151,8],[225,14,151,14],[225,18,151,18,"UnavailabilityError"],[225,54,151,37],[225,55,151,38],[225,69,151,52],[225,71,151,54],[225,128,151,111],[225,129,151,112],[226,6,152,4],[227,6,153,4],[227,10,153,8,"Platform"],[227,31,153,16],[227,32,153,17,"OS"],[227,34,153,19],[227,39,153,24],[227,48,153,33],[227,52,153,37,"Platform"],[227,73,153,45],[227,74,153,46,"Version"],[227,81,153,53],[227,85,153,57],[227,87,153,59],[227,89,153,61],[228,8,154,8],[228,14,154,14,"MediaLibrary"],[228,39,154,26],[228,40,154,27,"requestPermissionsAsync"],[228,63,154,50],[228,64,154,51],[228,69,154,56],[228,71,154,58,"mediaTypes"],[228,81,154,68],[228,82,154,69],[229,8,155,8],[230,6,156,4],[231,6,157,4],[231,10,157,8],[231,11,157,9,"MediaLibrary"],[231,36,157,21],[231,37,157,22,"presentPermissionsPickerAsync"],[231,66,157,51],[231,68,157,53],[232,8,158,8],[232,14,158,14],[232,18,158,18,"UnavailabilityError"],[232,54,158,37],[232,55,158,38],[232,69,158,52],[232,71,158,54],[232,102,158,85],[232,103,158,86],[233,6,159,4],[234,6,160,4],[234,19,160,17,"MediaLibrary"],[234,44,160,29],[234,45,160,30,"presentPermissionsPickerAsync"],[234,74,160,59],[234,75,160,60],[234,76,160,61],[235,4,161,0],[235,5,161,1],[236,4,161,1],[236,11,161,1,"_presentPermissionsPickerAsync"],[236,41,161,1],[236,42,161,1,"apply"],[236,47,161,1],[236,54,161,1,"arguments"],[236,63,161,1],[237,2,161,1],[238,2,161,1],[238,11,179,22,"createAssetAsync"],[238,27,179,38,"createAssetAsync"],[238,28,179,38,"_x"],[238,30,179,38],[238,32,179,38,"_x2"],[238,35,179,38],[239,4,179,38],[239,11,179,38,"_createAssetAsync"],[239,28,179,38],[239,29,179,38,"apply"],[239,34,179,38],[239,41,179,38,"arguments"],[239,50,179,38],[240,2,179,38],[240,4,194,0],[241,2,195,0],[242,0,196,0],[243,0,197,0],[244,0,198,0],[245,0,199,0],[246,0,200,0],[247,0,201,0],[248,0,202,0],[249,2,195,0],[249,11,195,0,"_createAssetAsync"],[249,29,195,0],[250,4,195,0,"_createAssetAsync"],[250,21,195,0],[250,28,195,0,"_asyncToGenerator2"],[250,46,195,0],[250,47,195,0,"default"],[250,54,195,0],[250,56,179,7],[250,67,179,39,"localUri"],[250,75,179,47],[250,77,179,49,"album"],[250,82,179,54],[250,84,179,56],[251,6,180,4],[251,10,180,8],[251,11,180,9,"MediaLibrary"],[251,36,180,21],[251,37,180,22,"createAssetAsync"],[251,53,180,38],[251,55,180,40],[252,8,181,8],[252,14,181,14],[252,18,181,18,"UnavailabilityError"],[252,54,181,37],[252,55,181,38],[252,69,181,52],[252,71,181,54],[252,89,181,72],[252,90,181,73],[253,6,182,4],[254,6,183,4],[254,10,183,10,"albumId"],[254,17,183,17],[254,20,183,20,"getId"],[254,25,183,25],[254,26,183,26,"album"],[254,31,183,31],[254,32,183,32],[255,6,184,4],[255,10,184,8],[255,11,184,9,"localUri"],[255,19,184,17],[255,23,184,21],[255,30,184,28,"localUri"],[255,38,184,36],[255,43,184,41],[255,51,184,49],[255,53,184,51],[256,8,185,8],[256,14,185,14],[256,18,185,18,"Error"],[256,23,185,23],[256,24,185,24],[256,75,185,75],[256,76,185,76],[257,6,186,4],[258,6,187,4],[258,10,187,10,"asset"],[258,15,187,15],[258,24,187,24,"MediaLibrary"],[258,49,187,36],[258,50,187,37,"createAssetAsync"],[258,66,187,53],[258,67,187,54,"localUri"],[258,75,187,62],[258,77,187,64,"albumId"],[258,84,187,71],[258,85,187,72],[259,6,188,4],[259,10,188,8,"Array"],[259,15,188,13],[259,16,188,14,"isArray"],[259,23,188,21],[259,24,188,22,"asset"],[259,29,188,27],[259,30,188,28],[259,32,188,30],[260,8,189,8],[261,8,190,8],[261,15,190,15,"asset"],[261,20,190,20],[261,21,190,21],[261,22,190,22],[261,23,190,23],[262,6,191,4],[263,6,192,4],[263,13,192,11,"asset"],[263,18,192,16],[264,4,193,0],[264,5,193,1],[265,4,193,1],[265,11,193,1,"_createAssetAsync"],[265,28,193,1],[265,29,193,1,"apply"],[265,34,193,1],[265,41,193,1,"arguments"],[265,50,193,1],[266,2,193,1],[267,2,193,1],[267,11,203,22,"saveToLibraryAsync"],[267,29,203,40,"saveToLibraryAsync"],[267,30,203,40,"_x3"],[267,33,203,40],[268,4,203,40],[268,11,203,40,"_saveToLibraryAsync"],[268,30,203,40],[268,31,203,40,"apply"],[268,36,203,40],[268,43,203,40,"arguments"],[268,52,203,40],[269,2,203,40],[269,4,209,0],[270,2,210,0],[271,0,211,0],[272,0,212,0],[273,0,213,0],[274,0,214,0],[275,0,215,0],[276,0,216,0],[277,0,217,0],[278,0,218,0],[279,0,219,0],[280,0,220,0],[281,0,221,0],[282,0,222,0],[283,2,210,0],[283,11,210,0,"_saveToLibraryAsync"],[283,31,210,0],[284,4,210,0,"_saveToLibraryAsync"],[284,23,210,0],[284,30,210,0,"_asyncToGenerator2"],[284,48,210,0],[284,49,210,0,"default"],[284,56,210,0],[284,58,203,7],[284,69,203,41,"localUri"],[284,77,203,49],[284,79,203,51],[285,6,204,4],[285,10,204,8],[285,11,204,9,"MediaLibrary"],[285,36,204,21],[285,37,204,22,"saveToLibraryAsync"],[285,55,204,40],[285,57,204,42],[286,8,205,8],[286,14,205,14],[286,18,205,18,"UnavailabilityError"],[286,54,205,37],[286,55,205,38],[286,69,205,52],[286,71,205,54],[286,91,205,74],[286,92,205,75],[287,6,206,4],[288,6,207,4],[288,19,207,17,"MediaLibrary"],[288,44,207,29],[288,45,207,30,"saveToLibraryAsync"],[288,63,207,48],[288,64,207,49,"localUri"],[288,72,207,57],[288,73,207,58],[289,4,208,0],[289,5,208,1],[290,4,208,1],[290,11,208,1,"_saveToLibraryAsync"],[290,30,208,1],[290,31,208,1,"apply"],[290,36,208,1],[290,43,208,1,"arguments"],[290,52,208,1],[291,2,208,1],[292,2,208,1],[292,11,223,22,"addAssetsToAlbumAsync"],[292,32,223,43,"addAssetsToAlbumAsync"],[292,33,223,43,"_x4"],[292,36,223,43],[292,38,223,43,"_x5"],[292,41,223,43],[293,4,223,43],[293,11,223,43,"_addAssetsToAlbumAsync"],[293,33,223,43],[293,34,223,43,"apply"],[293,39,223,43],[293,46,223,43,"arguments"],[293,55,223,43],[294,2,223,43],[294,4,238,0],[295,2,239,0],[296,0,240,0],[297,0,241,0],[298,0,242,0],[299,0,243,0],[300,0,244,0],[301,0,245,0],[302,0,246,0],[303,0,247,0],[304,2,239,0],[304,11,239,0,"_addAssetsToAlbumAsync"],[304,34,239,0],[305,4,239,0,"_addAssetsToAlbumAsync"],[305,26,239,0],[305,33,239,0,"_asyncToGenerator2"],[305,51,239,0],[305,52,239,0,"default"],[305,59,239,0],[305,61,223,7],[305,72,223,44,"assets"],[305,78,223,50],[305,80,223,52,"album"],[305,85,223,57],[305,87,223,72],[306,6,223,72],[306,10,223,59,"copy"],[306,14,223,63],[306,17,223,63,"arguments"],[306,26,223,63],[306,27,223,63,"length"],[306,33,223,63],[306,41,223,63,"arguments"],[306,50,223,63],[306,58,223,63,"undefined"],[306,67,223,63],[306,70,223,63,"arguments"],[306,79,223,63],[306,85,223,66],[306,89,223,70],[307,6,224,4],[307,10,224,8],[307,11,224,9,"MediaLibrary"],[307,36,224,21],[307,37,224,22,"addAssetsToAlbumAsync"],[307,58,224,43],[307,60,224,45],[308,8,225,8],[308,14,225,14],[308,18,225,18,"UnavailabilityError"],[308,54,225,37],[308,55,225,38],[308,69,225,52],[308,71,225,54],[308,94,225,77],[308,95,225,78],[309,6,226,4],[310,6,227,4],[310,10,227,10,"assetIds"],[310,18,227,18],[310,21,227,21,"arrayize"],[310,29,227,29],[310,30,227,30,"assets"],[310,36,227,36],[310,37,227,37],[310,38,227,38,"map"],[310,41,227,41],[310,42,227,42,"getId"],[310,47,227,47],[310,48,227,48],[311,6,228,4],[311,10,228,10,"albumId"],[311,17,228,17],[311,20,228,20,"getId"],[311,25,228,25],[311,26,228,26,"album"],[311,31,228,31],[311,32,228,32],[312,6,229,4,"checkAssetIds"],[312,19,229,17],[312,20,229,18,"assetIds"],[312,28,229,26],[312,29,229,27],[313,6,230,4],[313,10,230,8],[313,11,230,9,"albumId"],[313,18,230,16],[313,22,230,20],[313,29,230,27,"albumId"],[313,36,230,34],[313,41,230,39],[313,49,230,47],[313,51,230,49],[314,8,231,8],[314,14,231,14],[314,18,231,18,"Error"],[314,23,231,23],[314,24,231,24],[314,64,231,64],[314,65,231,65],[315,6,232,4],[316,6,233,4],[316,10,233,8,"Platform"],[316,31,233,16],[316,32,233,17,"OS"],[316,34,233,19],[316,39,233,24],[316,44,233,29],[316,46,233,31],[317,8,234,8],[317,21,234,21,"MediaLibrary"],[317,46,234,33],[317,47,234,34,"addAssetsToAlbumAsync"],[317,68,234,55],[317,69,234,56,"assetIds"],[317,77,234,64],[317,79,234,66,"albumId"],[317,86,234,73],[317,87,234,74],[318,6,235,4],[319,6,236,4],[319,19,236,17,"MediaLibrary"],[319,44,236,29],[319,45,236,30,"addAssetsToAlbumAsync"],[319,66,236,51],[319,67,236,52,"assetIds"],[319,75,236,60],[319,77,236,62,"albumId"],[319,84,236,69],[319,86,236,71],[319,87,236,72],[319,88,236,73,"copy"],[319,92,236,77],[319,93,236,78],[320,4,237,0],[320,5,237,1],[321,4,237,1],[321,11,237,1,"_addAssetsToAlbumAsync"],[321,33,237,1],[321,34,237,1,"apply"],[321,39,237,1],[321,46,237,1,"arguments"],[321,55,237,1],[322,2,237,1],[323,2,237,1],[323,11,248,22,"removeAssetsFromAlbumAsync"],[323,37,248,48,"removeAssetsFromAlbumAsync"],[323,38,248,48,"_x6"],[323,41,248,48],[323,43,248,48,"_x7"],[323,46,248,48],[324,4,248,48],[324,11,248,48,"_removeAssetsFromAlbumAsync"],[324,38,248,48],[324,39,248,48,"apply"],[324,44,248,48],[324,51,248,48,"arguments"],[324,60,248,48],[325,2,248,48],[325,4,257,0],[326,2,258,0],[327,0,259,0],[328,0,260,0],[329,0,261,0],[330,0,262,0],[331,0,263,0],[332,0,264,0],[333,2,258,0],[333,11,258,0,"_removeAssetsFromAlbumAsync"],[333,39,258,0],[334,4,258,0,"_removeAssetsFromAlbumAsync"],[334,31,258,0],[334,38,258,0,"_asyncToGenerator2"],[334,56,258,0],[334,57,258,0,"default"],[334,64,258,0],[334,66,248,7],[334,77,248,49,"assets"],[334,83,248,55],[334,85,248,57,"album"],[334,90,248,62],[334,92,248,64],[335,6,249,4],[335,10,249,8],[335,11,249,9,"MediaLibrary"],[335,36,249,21],[335,37,249,22,"removeAssetsFromAlbumAsync"],[335,63,249,48],[335,65,249,50],[336,8,250,8],[336,14,250,14],[336,18,250,18,"UnavailabilityError"],[336,54,250,37],[336,55,250,38],[336,69,250,52],[336,71,250,54],[336,99,250,82],[336,100,250,83],[337,6,251,4],[338,6,252,4],[338,10,252,10,"assetIds"],[338,18,252,18],[338,21,252,21,"arrayize"],[338,29,252,29],[338,30,252,30,"assets"],[338,36,252,36],[338,37,252,37],[338,38,252,38,"map"],[338,41,252,41],[338,42,252,42,"getId"],[338,47,252,47],[338,48,252,48],[339,6,253,4],[339,10,253,10,"albumId"],[339,17,253,17],[339,20,253,20,"getId"],[339,25,253,25],[339,26,253,26,"album"],[339,31,253,31],[339,32,253,32],[340,6,254,4,"checkAssetIds"],[340,19,254,17],[340,20,254,18,"assetIds"],[340,28,254,26],[340,29,254,27],[341,6,255,4],[341,19,255,17,"MediaLibrary"],[341,44,255,29],[341,45,255,30,"removeAssetsFromAlbumAsync"],[341,71,255,56],[341,72,255,57,"assetIds"],[341,80,255,65],[341,82,255,67,"albumId"],[341,89,255,74],[341,90,255,75],[342,4,256,0],[342,5,256,1],[343,4,256,1],[343,11,256,1,"_removeAssetsFromAlbumAsync"],[343,38,256,1],[343,39,256,1,"apply"],[343,44,256,1],[343,51,256,1,"arguments"],[343,60,256,1],[344,2,256,1],[345,2,256,1],[345,11,265,22,"deleteAssetsAsync"],[345,28,265,39,"deleteAssetsAsync"],[345,29,265,39,"_x8"],[345,32,265,39],[346,4,265,39],[346,11,265,39,"_deleteAssetsAsync"],[346,29,265,39],[346,30,265,39,"apply"],[346,35,265,39],[346,42,265,39,"arguments"],[346,51,265,39],[347,2,265,39],[347,4,273,0],[348,2,274,0],[349,0,275,0],[350,0,276,0],[351,0,277,0],[352,0,278,0],[353,0,279,0],[354,2,274,0],[354,11,274,0,"_deleteAssetsAsync"],[354,30,274,0],[355,4,274,0,"_deleteAssetsAsync"],[355,22,274,0],[355,29,274,0,"_asyncToGenerator2"],[355,47,274,0],[355,48,274,0,"default"],[355,55,274,0],[355,57,265,7],[355,68,265,40,"assets"],[355,74,265,46],[355,76,265,48],[356,6,266,4],[356,10,266,8],[356,11,266,9,"MediaLibrary"],[356,36,266,21],[356,37,266,22,"deleteAssetsAsync"],[356,54,266,39],[356,56,266,41],[357,8,267,8],[357,14,267,14],[357,18,267,18,"UnavailabilityError"],[357,54,267,37],[357,55,267,38],[357,69,267,52],[357,71,267,54],[357,90,267,73],[357,91,267,74],[358,6,268,4],[359,6,269,4],[359,10,269,10,"assetIds"],[359,18,269,18],[359,21,269,21,"arrayize"],[359,29,269,29],[359,30,269,30,"assets"],[359,36,269,36],[359,37,269,37],[359,38,269,38,"map"],[359,41,269,41],[359,42,269,42,"getId"],[359,47,269,47],[359,48,269,48],[360,6,270,4,"checkAssetIds"],[360,19,270,17],[360,20,270,18,"assetIds"],[360,28,270,26],[360,29,270,27],[361,6,271,4],[361,19,271,17,"MediaLibrary"],[361,44,271,29],[361,45,271,30,"deleteAssetsAsync"],[361,62,271,47],[361,63,271,48,"assetIds"],[361,71,271,56],[361,72,271,57],[362,4,272,0],[362,5,272,1],[363,4,272,1],[363,11,272,1,"_deleteAssetsAsync"],[363,29,272,1],[363,30,272,1,"apply"],[363,35,272,1],[363,42,272,1,"arguments"],[363,51,272,1],[364,2,272,1],[365,2,272,1],[365,11,280,22,"getAssetInfoAsync"],[365,28,280,39,"getAssetInfoAsync"],[365,29,280,39,"_x9"],[365,32,280,39],[366,4,280,39],[366,11,280,39,"_getAssetInfoAsync"],[366,29,280,39],[366,30,280,39,"apply"],[366,35,280,39],[366,42,280,39,"arguments"],[366,51,280,39],[367,2,280,39],[367,4,293,0],[368,2,294,0],[369,0,295,0],[370,0,296,0],[371,0,297,0],[372,0,298,0],[373,2,294,0],[373,11,294,0,"_getAssetInfoAsync"],[373,30,294,0],[374,4,294,0,"_getAssetInfoAsync"],[374,22,294,0],[374,29,294,0,"_asyncToGenerator2"],[374,47,294,0],[374,48,294,0,"default"],[374,55,294,0],[374,57,280,7],[374,68,280,40,"asset"],[374,73,280,45],[374,75,280,94],[375,6,280,94],[375,10,280,47,"options"],[375,17,280,54],[375,20,280,54,"arguments"],[375,29,280,54],[375,30,280,54,"length"],[375,36,280,54],[375,44,280,54,"arguments"],[375,53,280,54],[375,61,280,54,"undefined"],[375,70,280,54],[375,73,280,54,"arguments"],[375,82,280,54],[375,88,280,57],[376,8,280,59,"shouldDownloadFromNetwork"],[376,33,280,84],[376,35,280,86],[377,6,280,91],[377,7,280,92],[378,6,281,4],[378,10,281,8],[378,11,281,9,"MediaLibrary"],[378,36,281,21],[378,37,281,22,"getAssetInfoAsync"],[378,54,281,39],[378,56,281,41],[379,8,282,8],[379,14,282,14],[379,18,282,18,"UnavailabilityError"],[379,54,282,37],[379,55,282,38],[379,69,282,52],[379,71,282,54],[379,90,282,73],[379,91,282,74],[380,6,283,4],[381,6,284,4],[381,10,284,10,"assetId"],[381,17,284,17],[381,20,284,20,"getId"],[381,25,284,25],[381,26,284,26,"asset"],[381,31,284,31],[381,32,284,32],[382,6,285,4,"checkAssetIds"],[382,19,285,17],[382,20,285,18],[382,21,285,19,"assetId"],[382,28,285,26],[382,29,285,27],[382,30,285,28],[383,6,286,4],[383,10,286,10,"assetInfo"],[383,19,286,19],[383,28,286,28,"MediaLibrary"],[383,53,286,40],[383,54,286,41,"getAssetInfoAsync"],[383,71,286,58],[383,72,286,59,"assetId"],[383,79,286,66],[383,81,286,68,"options"],[383,88,286,75],[383,89,286,76],[384,6,287,4],[384,10,287,8,"Array"],[384,15,287,13],[384,16,287,14,"isArray"],[384,23,287,21],[384,24,287,22,"assetInfo"],[384,33,287,31],[384,34,287,32],[384,36,287,34],[385,8,288,8],[386,8,289,8],[386,15,289,15,"assetInfo"],[386,24,289,24],[386,25,289,25],[386,26,289,26],[386,27,289,27],[387,6,290,4],[388,6,291,4],[388,13,291,11,"assetInfo"],[388,22,291,20],[389,4,292,0],[389,5,292,1],[390,4,292,1],[390,11,292,1,"_getAssetInfoAsync"],[390,29,292,1],[390,30,292,1,"apply"],[390,35,292,1],[390,42,292,1,"arguments"],[390,51,292,1],[391,2,292,1],[392,2,292,1],[392,11,299,22,"getAlbumsAsync"],[392,25,299,36,"getAlbumsAsync"],[392,26,299,36],[393,4,299,36],[393,11,299,36,"_getAlbumsAsync"],[393,26,299,36],[393,27,299,36,"apply"],[393,32,299,36],[393,39,299,36,"arguments"],[393,48,299,36],[394,2,299,36],[394,4,305,0],[395,2,306,0],[396,0,307,0],[397,0,308,0],[398,0,309,0],[399,0,310,0],[400,0,311,0],[401,2,306,0],[401,11,306,0,"_getAlbumsAsync"],[401,27,306,0],[402,4,306,0,"_getAlbumsAsync"],[402,19,306,0],[402,26,306,0,"_asyncToGenerator2"],[402,44,306,0],[402,45,306,0,"default"],[402,52,306,0],[402,54,299,7],[402,67,299,74],[403,6,299,74],[403,10,299,74,"_ref"],[403,14,299,74],[403,17,299,74,"arguments"],[403,26,299,74],[403,27,299,74,"length"],[403,33,299,74],[403,41,299,74,"arguments"],[403,50,299,74],[403,58,299,74,"undefined"],[403,67,299,74],[403,70,299,74,"arguments"],[403,79,299,74],[403,85,299,70],[403,86,299,71],[403,87,299,72],[404,8,299,72,"_ref$includeSmartAlbu"],[404,29,299,72],[404,32,299,72,"_ref"],[404,36,299,72],[404,37,299,39,"includeSmartAlbums"],[404,55,299,57],[405,8,299,39,"includeSmartAlbums"],[405,26,299,57],[405,29,299,57,"_ref$includeSmartAlbu"],[405,50,299,57],[405,64,299,60],[405,69,299,65],[405,72,299,65,"_ref$includeSmartAlbu"],[405,93,299,65],[406,6,300,4],[406,10,300,8],[406,11,300,9,"MediaLibrary"],[406,36,300,21],[406,37,300,22,"getAlbumsAsync"],[406,51,300,36],[406,53,300,38],[407,8,301,8],[407,14,301,14],[407,18,301,18,"UnavailabilityError"],[407,54,301,37],[407,55,301,38],[407,69,301,52],[407,71,301,54],[407,87,301,70],[407,88,301,71],[408,6,302,4],[409,6,303,4],[409,19,303,17,"MediaLibrary"],[409,44,303,29],[409,45,303,30,"getAlbumsAsync"],[409,59,303,44],[409,60,303,45],[410,8,303,47,"includeSmartAlbums"],[411,6,303,66],[411,7,303,67],[411,8,303,68],[412,4,304,0],[412,5,304,1],[413,4,304,1],[413,11,304,1,"_getAlbumsAsync"],[413,26,304,1],[413,27,304,1,"apply"],[413,32,304,1],[413,39,304,1,"arguments"],[413,48,304,1],[414,2,304,1],[415,2,304,1],[415,11,312,22,"getAlbumAsync"],[415,24,312,35,"getAlbumAsync"],[415,25,312,35,"_x0"],[415,28,312,35],[416,4,312,35],[416,11,312,35,"_getAlbumAsync"],[416,25,312,35],[416,26,312,35,"apply"],[416,31,312,35],[416,38,312,35,"arguments"],[416,47,312,35],[417,2,312,35],[417,4,321,0],[418,2,322,0],[419,0,323,0],[420,0,324,0],[421,0,325,0],[422,0,326,0],[423,0,327,0],[424,0,328,0],[425,0,329,0],[426,0,330,0],[427,0,331,0],[428,0,332,0],[429,0,333,0],[430,0,334,0],[431,0,335,0],[432,0,336,0],[433,2,322,0],[433,11,322,0,"_getAlbumAsync"],[433,26,322,0],[434,4,322,0,"_getAlbumAsync"],[434,18,322,0],[434,25,322,0,"_asyncToGenerator2"],[434,43,322,0],[434,44,322,0,"default"],[434,51,322,0],[434,53,312,7],[434,64,312,36,"title"],[434,69,312,41],[434,71,312,43],[435,6,313,4],[435,10,313,8],[435,11,313,9,"MediaLibrary"],[435,36,313,21],[435,37,313,22,"getAlbumAsync"],[435,50,313,35],[435,52,313,37],[436,8,314,8],[436,14,314,14],[436,18,314,18,"UnavailabilityError"],[436,54,314,37],[436,55,314,38],[436,69,314,52],[436,71,314,54],[436,86,314,69],[436,87,314,70],[437,6,315,4],[438,6,316,4],[438,10,316,8],[438,17,316,15,"title"],[438,22,316,20],[438,27,316,25],[438,35,316,33],[438,37,316,35],[439,8,317,8],[439,14,317,14],[439,18,317,18,"Error"],[439,23,317,23],[439,24,317,24],[439,55,317,55],[439,56,317,56],[440,6,318,4],[441,6,319,4],[441,19,319,17,"MediaLibrary"],[441,44,319,29],[441,45,319,30,"getAlbumAsync"],[441,58,319,43],[441,59,319,44,"title"],[441,64,319,49],[441,65,319,50],[442,4,320,0],[442,5,320,1],[443,4,320,1],[443,11,320,1,"_getAlbumAsync"],[443,25,320,1],[443,26,320,1,"apply"],[443,31,320,1],[443,38,320,1,"arguments"],[443,47,320,1],[444,2,320,1],[445,2,320,1],[445,11,337,22,"createAlbumAsync"],[445,27,337,38,"createAlbumAsync"],[445,28,337,38,"_x1"],[445,31,337,38],[445,33,337,38,"_x10"],[445,37,337,38],[446,4,337,38],[446,11,337,38,"_createAlbumAsync"],[446,28,337,38],[446,29,337,38,"apply"],[446,34,337,38],[446,41,337,38,"arguments"],[446,50,337,38],[447,2,337,38],[447,4,359,0],[448,2,360,0],[449,0,361,0],[450,0,362,0],[451,0,363,0],[452,0,364,0],[453,0,365,0],[454,0,366,0],[455,0,367,0],[456,0,368,0],[457,0,369,0],[458,2,360,0],[458,11,360,0,"_createAlbumAsync"],[458,29,360,0],[459,4,360,0,"_createAlbumAsync"],[459,21,360,0],[459,28,360,0,"_asyncToGenerator2"],[459,46,360,0],[459,47,360,0,"default"],[459,54,360,0],[459,56,337,7],[459,67,337,39,"albumName"],[459,76,337,48],[459,78,337,50,"asset"],[459,83,337,55],[459,85,337,97],[460,6,337,97],[460,10,337,57,"copyAsset"],[460,19,337,66],[460,22,337,66,"arguments"],[460,31,337,66],[460,32,337,66,"length"],[460,38,337,66],[460,46,337,66,"arguments"],[460,55,337,66],[460,63,337,66,"undefined"],[460,72,337,66],[460,75,337,66,"arguments"],[460,84,337,66],[460,90,337,69],[460,94,337,73],[461,6,337,73],[461,10,337,75,"initialAssetLocalUri"],[461,30,337,95],[461,33,337,95,"arguments"],[461,42,337,95],[461,43,337,95,"length"],[461,49,337,95],[461,56,337,95,"arguments"],[461,65,337,95],[461,71,337,95,"undefined"],[461,80,337,95],[462,6,338,4],[462,10,338,8],[462,11,338,9,"MediaLibrary"],[462,36,338,21],[462,37,338,22,"createAlbumAsync"],[462,53,338,38],[462,55,338,40],[463,8,339,8],[463,14,339,14],[463,18,339,18,"UnavailabilityError"],[463,54,339,37],[463,55,339,38],[463,69,339,52],[463,71,339,54],[463,89,339,72],[463,90,339,73],[464,6,340,4],[465,6,341,4],[465,10,341,10,"assetId"],[465,17,341,17],[465,20,341,20,"getId"],[465,25,341,25],[465,26,341,26,"asset"],[465,31,341,31],[465,32,341,32],[466,6,342,4],[466,10,342,8,"Platform"],[466,31,342,16],[466,32,342,17,"OS"],[466,34,342,19],[466,39,342,24],[466,48,342,33],[466,53,343,9],[466,60,343,16,"assetId"],[466,67,343,23],[466,72,343,28],[466,80,343,36],[466,84,343,40,"assetId"],[466,91,343,47],[466,92,343,48,"length"],[466,98,343,54],[466,103,343,59],[466,104,343,60],[466,105,343,61],[466,109,344,8],[466,110,344,9,"initialAssetLocalUri"],[466,130,344,29],[466,132,344,31],[467,8,345,8],[468,8,346,8],[468,14,346,14],[468,18,346,18,"Error"],[468,23,346,23],[468,24,346,24],[468,110,346,110],[468,111,346,111],[469,6,347,4],[470,6,348,4],[470,10,348,8],[470,11,348,9,"albumName"],[470,20,348,18],[470,24,348,22],[470,31,348,29,"albumName"],[470,40,348,38],[470,45,348,43],[470,53,348,51],[470,55,348,53],[471,8,349,8],[471,14,349,14],[471,18,349,18,"Error"],[471,23,349,23],[471,24,349,24],[471,76,349,76],[471,77,349,77],[472,6,350,4],[473,6,351,4],[473,10,351,8,"assetId"],[473,17,351,15],[473,21,351,19],[473,25,351,23],[473,29,351,27],[473,36,351,34,"assetId"],[473,43,351,41],[473,48,351,46],[473,56,351,54],[473,58,351,56],[474,8,352,8],[474,14,352,14],[474,18,352,18,"Error"],[474,23,352,23],[474,24,352,24],[474,52,352,52],[474,53,352,53],[475,6,353,4],[476,6,354,4],[476,10,354,8,"Platform"],[476,31,354,16],[476,32,354,17,"OS"],[476,34,354,19],[476,39,354,24],[476,44,354,29],[476,46,354,31],[477,8,355,8],[477,21,355,21,"MediaLibrary"],[477,46,355,33],[477,47,355,34,"createAlbumAsync"],[477,63,355,50],[477,64,355,51,"albumName"],[477,73,355,60],[477,75,355,62,"assetId"],[477,82,355,69],[477,84,355,71,"initialAssetLocalUri"],[477,104,355,91],[477,105,355,92],[478,6,356,4],[479,6,357,4],[479,19,357,17,"MediaLibrary"],[479,44,357,29],[479,45,357,30,"createAlbumAsync"],[479,61,357,46],[479,62,357,47,"albumName"],[479,71,357,56],[479,73,357,58,"assetId"],[479,80,357,65],[479,82,357,67],[479,83,357,68],[479,84,357,69,"copyAsset"],[479,93,357,78],[479,95,357,80,"initialAssetLocalUri"],[479,115,357,100],[479,116,357,101],[480,4,358,0],[480,5,358,1],[481,4,358,1],[481,11,358,1,"_createAlbumAsync"],[481,28,358,1],[481,29,358,1,"apply"],[481,34,358,1],[481,41,358,1,"arguments"],[481,50,358,1],[482,2,358,1],[483,2,358,1],[483,11,370,22,"deleteAlbumsAsync"],[483,28,370,39,"deleteAlbumsAsync"],[483,29,370,39,"_x11"],[483,33,370,39],[484,4,370,39],[484,11,370,39,"_deleteAlbumsAsync"],[484,29,370,39],[484,30,370,39,"apply"],[484,35,370,39],[484,42,370,39,"arguments"],[484,51,370,39],[485,2,370,39],[485,4,381,0],[486,2,382,0],[487,0,383,0],[488,0,384,0],[489,0,385,0],[490,0,386,0],[491,2,382,0],[491,11,382,0,"_deleteAlbumsAsync"],[491,30,382,0],[492,4,382,0,"_deleteAlbumsAsync"],[492,22,382,0],[492,29,382,0,"_asyncToGenerator2"],[492,47,382,0],[492,48,382,0,"default"],[492,55,382,0],[492,57,370,7],[492,68,370,40,"albums"],[492,74,370,46],[492,76,370,69],[493,6,370,69],[493,10,370,48,"assetRemove"],[493,21,370,59],[493,24,370,59,"arguments"],[493,33,370,59],[493,34,370,59,"length"],[493,40,370,59],[493,48,370,59,"arguments"],[493,57,370,59],[493,65,370,59,"undefined"],[493,74,370,59],[493,77,370,59,"arguments"],[493,86,370,59],[493,92,370,62],[493,97,370,67],[494,6,371,4],[494,10,371,8],[494,11,371,9,"MediaLibrary"],[494,36,371,21],[494,37,371,22,"deleteAlbumsAsync"],[494,54,371,39],[494,56,371,41],[495,8,372,8],[495,14,372,14],[495,18,372,18,"UnavailabilityError"],[495,54,372,37],[495,55,372,38],[495,69,372,52],[495,71,372,54],[495,90,372,73],[495,91,372,74],[496,6,373,4],[497,6,374,4],[497,10,374,10,"albumIds"],[497,18,374,18],[497,21,374,21,"arrayize"],[497,29,374,29],[497,30,374,30,"albums"],[497,36,374,36],[497,37,374,37],[497,38,374,38,"map"],[497,41,374,41],[497,42,374,42,"getId"],[497,47,374,47],[497,48,374,48],[498,6,375,4,"checkAlbumIds"],[498,19,375,17],[498,20,375,18,"albumIds"],[498,28,375,26],[498,29,375,27],[499,6,376,4],[499,10,376,8,"Platform"],[499,31,376,16],[499,32,376,17,"OS"],[499,34,376,19],[499,39,376,24],[499,48,376,33],[499,50,376,35],[500,8,377,8],[500,21,377,21,"MediaLibrary"],[500,46,377,33],[500,47,377,34,"deleteAlbumsAsync"],[500,64,377,51],[500,65,377,52,"albumIds"],[500,73,377,60],[500,74,377,61],[501,6,378,4],[502,6,379,4],[502,19,379,17,"MediaLibrary"],[502,44,379,29],[502,45,379,30,"deleteAlbumsAsync"],[502,62,379,47],[502,63,379,48,"albumIds"],[502,71,379,56],[502,73,379,58],[502,74,379,59],[502,75,379,60,"assetRemove"],[502,86,379,71],[502,87,379,72],[503,4,380,0],[503,5,380,1],[504,4,380,1],[504,11,380,1,"_deleteAlbumsAsync"],[504,29,380,1],[504,30,380,1,"apply"],[504,35,380,1],[504,42,380,1,"arguments"],[504,51,380,1],[505,2,380,1],[506,2,380,1],[506,11,387,22,"getAssetsAsync"],[506,25,387,36,"getAssetsAsync"],[506,26,387,36],[507,4,387,36],[507,11,387,36,"_getAssetsAsync"],[507,26,387,36],[507,27,387,36,"apply"],[507,32,387,36],[507,39,387,36,"arguments"],[507,48,387,36],[508,2,387,36],[508,4,425,0],[509,2,426,0],[510,0,427,0],[511,0,428,0],[512,0,429,0],[513,0,430,0],[514,0,431,0],[515,0,432,0],[516,0,433,0],[517,0,434,0],[518,0,435,0],[519,0,436,0],[520,2,426,0],[520,11,426,0,"_getAssetsAsync"],[520,27,426,0],[521,4,426,0,"_getAssetsAsync"],[521,19,426,0],[521,26,426,0,"_asyncToGenerator2"],[521,44,426,0],[521,45,426,0,"default"],[521,52,426,0],[521,54,387,7],[521,67,387,57],[522,6,387,57],[522,10,387,37,"assetsOptions"],[522,23,387,50],[522,26,387,50,"arguments"],[522,35,387,50],[522,36,387,50,"length"],[522,42,387,50],[522,50,387,50,"arguments"],[522,59,387,50],[522,67,387,50,"undefined"],[522,76,387,50],[522,79,387,50,"arguments"],[522,88,387,50],[522,94,387,53],[522,95,387,54],[522,96,387,55],[523,6,388,4],[523,10,388,8],[523,11,388,9,"MediaLibrary"],[523,36,388,21],[523,37,388,22,"getAssetsAsync"],[523,51,388,36],[523,53,388,38],[524,8,389,8],[524,14,389,14],[524,18,389,18,"UnavailabilityError"],[524,54,389,37],[524,55,389,38],[524,69,389,52],[524,71,389,54],[524,87,389,70],[524,88,389,71],[525,6,390,4],[526,6,391,4],[526,10,391,12,"first"],[526,15,391,17],[526,18,391,121,"assetsOptions"],[526,31,391,134],[526,32,391,12,"first"],[526,37,391,17],[527,8,391,19,"after"],[527,13,391,24],[527,16,391,121,"assetsOptions"],[527,29,391,134],[527,30,391,19,"after"],[527,35,391,24],[528,8,391,26,"album"],[528,13,391,31],[528,16,391,121,"assetsOptions"],[528,29,391,134],[528,30,391,26,"album"],[528,35,391,31],[529,8,391,33,"sortBy"],[529,14,391,39],[529,17,391,121,"assetsOptions"],[529,30,391,134],[529,31,391,33,"sortBy"],[529,37,391,39],[530,8,391,41,"mediaType"],[530,17,391,50],[530,20,391,121,"assetsOptions"],[530,33,391,134],[530,34,391,41,"mediaType"],[530,43,391,50],[531,8,391,52,"createdAfter"],[531,20,391,64],[531,23,391,121,"assetsOptions"],[531,36,391,134],[531,37,391,52,"createdAfter"],[531,49,391,64],[532,8,391,66,"createdBefore"],[532,21,391,79],[532,24,391,121,"assetsOptions"],[532,37,391,134],[532,38,391,66,"createdBefore"],[532,51,391,79],[533,8,391,81,"mediaSubtypes"],[533,21,391,94],[533,24,391,121,"assetsOptions"],[533,37,391,134],[533,38,391,81,"mediaSubtypes"],[533,51,391,94],[534,8,391,96,"resolveWithFullInfo"],[534,27,391,115],[534,30,391,121,"assetsOptions"],[534,43,391,134],[534,44,391,96,"resolveWithFullInfo"],[534,63,391,115],[535,6,392,4],[535,10,392,10,"options"],[535,17,392,17],[535,20,392,20],[536,8,393,8,"first"],[536,13,393,13],[536,15,393,15,"first"],[536,20,393,20],[536,24,393,24],[536,28,393,28],[536,31,393,31],[536,33,393,33],[536,36,393,36,"first"],[536,41,393,41],[537,8,394,8,"after"],[537,13,394,13],[537,15,394,15,"getId"],[537,20,394,20],[537,21,394,21,"after"],[537,26,394,26],[537,27,394,27],[538,8,395,8,"album"],[538,13,395,13],[538,15,395,15,"getId"],[538,20,395,20],[538,21,395,21,"album"],[538,26,395,26],[538,27,395,27],[539,8,396,8,"sortBy"],[539,14,396,14],[539,16,396,16,"arrayize"],[539,24,396,24],[539,25,396,25,"sortBy"],[539,31,396,31],[539,32,396,32],[540,8,397,8,"mediaType"],[540,17,397,17],[540,19,397,19,"arrayize"],[540,27,397,27],[540,28,397,28,"mediaType"],[540,37,397,37],[540,41,397,41],[540,42,397,42,"MediaType"],[540,51,397,51],[540,52,397,52,"photo"],[540,57,397,57],[540,58,397,58],[540,59,397,59],[541,8,398,8,"mediaSubtypes"],[541,21,398,21],[541,23,398,23,"arrayize"],[541,31,398,31],[541,32,398,32,"mediaSubtypes"],[541,45,398,45],[541,46,398,46],[542,8,399,8,"createdAfter"],[542,20,399,20],[542,22,399,22,"dateToNumber"],[542,34,399,34],[542,35,399,35,"createdAfter"],[542,47,399,47],[542,48,399,48],[543,8,400,8,"createdBefore"],[543,21,400,21],[543,23,400,23,"dateToNumber"],[543,35,400,35],[543,36,400,36,"createdBefore"],[543,49,400,49],[543,50,400,50],[544,8,401,8,"resolveWithFullInfo"],[544,27,401,27],[544,29,401,29,"resolveWithFullInfo"],[544,48,401,48],[544,52,401,52],[545,6,402,4],[545,7,402,5],[546,6,403,4],[546,10,403,8,"first"],[546,15,403,13],[546,19,403,17],[546,23,403,21],[546,27,403,25],[546,34,403,32,"options"],[546,41,403,39],[546,42,403,40,"first"],[546,47,403,45],[546,52,403,50],[546,60,403,58],[546,62,403,60],[547,8,404,8],[547,14,404,14],[547,18,404,18,"Error"],[547,23,404,23],[547,24,404,24],[547,58,404,58],[547,59,404,59],[548,6,405,4],[549,6,406,4],[549,10,406,8,"after"],[549,15,406,13],[549,19,406,17],[549,23,406,21],[549,27,406,25],[549,34,406,32,"options"],[549,41,406,39],[549,42,406,40,"after"],[549,47,406,45],[549,52,406,50],[549,60,406,58],[549,62,406,60],[550,8,407,8],[550,14,407,14],[550,18,407,18,"Error"],[550,23,407,23],[550,24,407,24],[550,58,407,58],[550,59,407,59],[551,6,408,4],[552,6,409,4],[552,10,409,8,"album"],[552,15,409,13],[552,19,409,17],[552,23,409,21],[552,27,409,25],[552,34,409,32,"options"],[552,41,409,39],[552,42,409,40,"album"],[552,47,409,45],[552,52,409,50],[552,60,409,58],[552,62,409,60],[553,8,410,8],[553,14,410,14],[553,18,410,18,"Error"],[553,23,410,23],[553,24,410,24],[553,58,410,58],[553,59,410,59],[554,6,411,4],[555,6,412,4],[555,10,412,8,"after"],[555,15,412,13],[555,19,412,17],[555,23,412,21],[555,27,412,25,"Platform"],[555,48,412,33],[555,49,412,34,"OS"],[555,51,412,36],[555,56,412,41],[555,65,412,50],[555,69,412,54,"isNaN"],[555,74,412,59],[555,75,412,60,"parseInt"],[555,83,412,68],[555,84,412,69,"getId"],[555,89,412,74],[555,90,412,75,"after"],[555,95,412,80],[555,96,412,81],[555,98,412,83],[555,100,412,85],[555,101,412,86],[555,102,412,87],[555,104,412,89],[556,8,413,8],[556,14,413,14],[556,18,413,18,"Error"],[556,23,413,23],[556,24,413,24],[556,60,413,60],[556,61,413,61],[557,6,414,4],[558,6,415,4],[558,10,415,8,"first"],[558,15,415,13],[558,19,415,17],[558,23,415,21],[558,27,415,25,"first"],[558,32,415,30],[558,35,415,33],[558,36,415,34],[558,38,415,36],[559,8,416,8],[559,14,416,14],[559,18,416,18,"Error"],[559,23,416,23],[559,24,416,24],[559,68,416,68],[559,69,416,69],[560,6,417,4],[561,6,418,4,"options"],[561,13,418,11],[561,14,418,12,"mediaType"],[561,23,418,21],[561,24,418,22,"forEach"],[561,31,418,29],[561,32,418,30,"checkMediaType"],[561,46,418,44],[561,47,418,45],[562,6,419,4],[563,6,420,4],[563,19,420,17,"MediaLibrary"],[563,44,420,29],[563,45,420,30,"getAssetsAsync"],[563,59,420,44],[563,60,420,45],[564,8,421,8],[564,11,421,11,"options"],[564,18,421,18],[565,8,422,8,"sortBy"],[565,14,422,14],[565,16,422,16,"options"],[565,23,422,23],[565,24,422,24,"sortBy"],[565,30,422,30],[565,31,422,31,"map"],[565,34,422,34],[565,35,422,35,"sortByOptionToString"],[565,55,422,55],[566,6,423,4],[566,7,423,5],[566,8,423,6],[567,4,424,0],[567,5,424,1],[568,4,424,1],[568,11,424,1,"_getAssetsAsync"],[568,26,424,1],[568,27,424,1,"apply"],[568,32,424,1],[568,39,424,1,"arguments"],[568,48,424,1],[569,2,424,1],[570,2,437,7],[570,11,437,16,"addListener"],[570,22,437,27,"addListener"],[570,23,437,28,"listener"],[570,31,437,36],[570,33,437,38],[571,4,438,4],[571,11,438,11,"MediaLibrary"],[571,36,438,23],[571,37,438,24,"addListener"],[571,48,438,35],[571,49,438,36,"MediaLibrary"],[571,74,438,48],[571,75,438,49,"CHANGE_LISTENER_NAME"],[571,95,438,69],[571,97,438,71,"listener"],[571,105,438,79],[571,106,438,80],[572,2,439,0],[573,2,440,0],[574,2,441,7],[574,11,441,16,"removeSubscription"],[574,29,441,34,"removeSubscription"],[574,30,441,35,"subscription"],[574,42,441,47],[574,44,441,49],[575,4,442,4,"subscription"],[575,16,442,16],[575,17,442,17,"remove"],[575,23,442,23],[575,24,442,24],[575,25,442,25],[576,2,443,0],[577,2,444,0],[578,2,445,0],[579,0,446,0],[580,0,447,0],[581,2,448,7],[581,11,448,16,"removeAllListeners"],[581,29,448,34,"removeAllListeners"],[581,30,448,34],[581,32,448,37],[582,4,449,4,"MediaLibrary"],[582,29,449,16],[582,30,449,17,"removeAllListeners"],[582,48,449,35],[582,49,449,36,"MediaLibrary"],[582,74,449,48],[582,75,449,49,"CHANGE_LISTENER_NAME"],[582,95,449,69],[582,96,449,70],[583,2,450,0],[584,2,451,0],[585,2,452,0],[586,0,453,0],[587,0,454,0],[588,0,455,0],[589,0,456,0],[590,0,457,0],[591,2,452,0],[591,11,458,22,"getMomentsAsync"],[591,26,458,37,"getMomentsAsync"],[591,27,458,37],[592,4,458,37],[592,11,458,37,"_getMomentsAsync"],[592,27,458,37],[592,28,458,37,"apply"],[592,33,458,37],[592,40,458,37,"arguments"],[592,49,458,37],[593,2,458,37],[593,4,464,0],[594,2,465,0],[595,0,466,0],[596,0,467,0],[597,0,468,0],[598,0,469,0],[599,0,470,0],[600,0,471,0],[601,0,472,0],[602,0,473,0],[603,0,474,0],[604,0,475,0],[605,0,476,0],[606,0,477,0],[607,0,478,0],[608,0,479,0],[609,0,480,0],[610,0,481,0],[611,0,482,0],[612,0,483,0],[613,0,484,0],[614,0,485,0],[615,0,486,0],[616,0,487,0],[617,0,488,0],[618,0,489,0],[619,2,465,0],[619,11,465,0,"_getMomentsAsync"],[619,28,465,0],[620,4,465,0,"_getMomentsAsync"],[620,20,465,0],[620,27,465,0,"_asyncToGenerator2"],[620,45,465,0],[620,46,465,0,"default"],[620,53,465,0],[620,55,458,7],[620,68,458,40],[621,6,459,4],[621,10,459,8],[621,11,459,9,"MediaLibrary"],[621,36,459,21],[621,37,459,22,"getMomentsAsync"],[621,52,459,37],[621,54,459,39],[622,8,460,8],[622,14,460,14],[622,18,460,18,"UnavailabilityError"],[622,54,460,37],[622,55,460,38],[622,69,460,52],[622,71,460,54],[622,88,460,71],[622,89,460,72],[623,6,461,4],[624,6,462,4],[624,19,462,17,"MediaLibrary"],[624,44,462,29],[624,45,462,30,"getMomentsAsync"],[624,60,462,45],[624,61,462,46],[624,62,462,47],[625,4,463,0],[625,5,463,1],[626,4,463,1],[626,11,463,1,"_getMomentsAsync"],[626,27,463,1],[626,28,463,1,"apply"],[626,33,463,1],[626,40,463,1,"arguments"],[626,49,463,1],[627,2,463,1],[628,2,463,1],[628,11,490,22,"migrateAlbumIfNeededAsync"],[628,36,490,47,"migrateAlbumIfNeededAsync"],[628,37,490,47,"_x12"],[628,41,490,47],[629,4,490,47],[629,11,490,47,"_migrateAlbumIfNeededAsync"],[629,37,490,47],[629,38,490,47,"apply"],[629,43,490,47],[629,50,490,47,"arguments"],[629,59,490,47],[630,2,490,47],[630,4,496,0],[631,2,497,0],[632,0,498,0],[633,0,499,0],[634,0,500,0],[635,0,501,0],[636,0,502,0],[637,0,503,0],[638,2,497,0],[638,11,497,0,"_migrateAlbumIfNeededAsync"],[638,38,497,0],[639,4,497,0,"_migrateAlbumIfNeededAsync"],[639,30,497,0],[639,37,497,0,"_asyncToGenerator2"],[639,55,497,0],[639,56,497,0,"default"],[639,63,497,0],[639,65,490,7],[639,76,490,48,"album"],[639,81,490,53],[639,83,490,55],[640,6,491,4],[640,10,491,8],[640,11,491,9,"MediaLibrary"],[640,36,491,21],[640,37,491,22,"migrateAlbumIfNeededAsync"],[640,62,491,47],[640,64,491,49],[641,8,492,8],[642,6,493,4],[643,6,494,4],[643,19,494,17,"MediaLibrary"],[643,44,494,29],[643,45,494,30,"migrateAlbumIfNeededAsync"],[643,70,494,55],[643,71,494,56,"getId"],[643,76,494,61],[643,77,494,62,"album"],[643,82,494,67],[643,83,494,68],[643,84,494,69],[644,4,495,0],[644,5,495,1],[645,4,495,1],[645,11,495,1,"_migrateAlbumIfNeededAsync"],[645,37,495,1],[645,38,495,1,"apply"],[645,43,495,1],[645,50,495,1,"arguments"],[645,59,495,1],[646,2,495,1],[647,2,495,1],[647,11,504,22,"albumNeedsMigrationAsync"],[647,35,504,46,"albumNeedsMigrationAsync"],[647,36,504,46,"_x13"],[647,40,504,46],[648,4,504,46],[648,11,504,46,"_albumNeedsMigrationAsync"],[648,36,504,46],[648,37,504,46,"apply"],[648,42,504,46],[648,49,504,46,"arguments"],[648,58,504,46],[649,2,504,46],[650,2,504,46],[650,11,504,46,"_albumNeedsMigrationAsync"],[650,37,504,46],[651,4,504,46,"_albumNeedsMigrationAsync"],[651,29,504,46],[651,36,504,46,"_asyncToGenerator2"],[651,54,504,46],[651,55,504,46,"default"],[651,62,504,46],[651,64,504,7],[651,75,504,47,"album"],[651,80,504,52],[651,82,504,54],[652,6,505,4],[652,10,505,8],[652,11,505,9,"MediaLibrary"],[652,36,505,21],[652,37,505,22,"albumNeedsMigrationAsync"],[652,61,505,46],[652,63,505,48],[653,8,506,8],[653,15,506,15],[653,20,506,20],[654,6,507,4],[655,6,508,4],[655,19,508,17,"MediaLibrary"],[655,44,508,29],[655,45,508,30,"albumNeedsMigrationAsync"],[655,69,508,54],[655,70,508,55,"getId"],[655,75,508,60],[655,76,508,61,"album"],[655,81,508,66],[655,82,508,67],[655,83,508,68],[656,4,509,0],[656,5,509,1],[657,4,509,1],[657,11,509,1,"_albumNeedsMigrationAsync"],[657,36,509,1],[657,37,509,1,"apply"],[657,42,509,1],[657,49,509,1,"arguments"],[657,58,509,1],[658,2,509,1],[659,0,509,1],[659,3]],"functionMap":{"names":["<global>","arrayize","getId","checkAssetIds","assetIds.some$argument_0","checkAlbumIds","albumIds.some$argument_0","checkMediaType","checkSortBy","checkSortByKey","sortByOptionToString","dateToNumber","isAvailableAsync","requestPermissionsAsync","getPermissionsAsync","createPermissionHook$argument_0.getMethod","createPermissionHook$argument_0.requestMethod","presentPermissionsPickerAsync","createAssetAsync","saveToLibraryAsync","addAssetsToAlbumAsync","removeAssetsFromAlbumAsync","deleteAssetsAsync","getAssetInfoAsync","getAlbumsAsync","getAlbumAsync","createAlbumAsync","deleteAlbumsAsync","getAssetsAsync","addListener","removeSubscription","removeAllListeners","getMomentsAsync","migrateAlbumIfNeededAsync","albumNeedsMigrationAsync"],"mappings":"AAA;ACU;CDK;AEC;CFK;AGC;sBCC,qCD;CHG;AKC;sBCC,qCD;CLG;AOC;CPI;AQC;CRU;ASC;CTI;AUC;CVM;AWC;CXE;OYiB;CZE;OaW;CbQ;OcS;CdQ;eea,kFf;mBgBC,sFhB;OiBiB;CjBY;OkBkB;ClBc;OmBU;CnBK;OoBe;CpBc;OqBW;CrBQ;OsBS;CtBO;OuBQ;CvBY;OwBO;CxBK;OyBQ;CzBQ;O0BiB;C1BqB;O2BY;C3BU;O4BO;C5BqC;O6Ba;C7BE;O8BE;C9BE;O+BK;C/BE;OgCQ;ChCK;OiC2B;CjCK;OkCS;ClCK"}},"type":"js/module"}]}