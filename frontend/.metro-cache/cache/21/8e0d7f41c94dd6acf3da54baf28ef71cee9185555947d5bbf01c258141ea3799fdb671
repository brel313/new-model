{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.FileSystemWritableSink = exports.FileSystemReadableStreamSource = void 0;\n  class FileSystemReadableStreamSource {\n    size = 1024;\n    type = 'bytes';\n    constructor(handle) {\n      this.handle = handle;\n    }\n    cancel() {\n      this.handle.close();\n    }\n    pull(controller) {\n      const theView = controller.byobRequest?.view;\n      if (!theView) {\n        const bytes = this.handle.readBytes(this.size);\n        if (bytes.length === 0) {\n          controller.close();\n          return;\n        }\n        controller.enqueue(bytes);\n        return;\n      }\n\n      // TODO: Optimize by adding a native method that can write into a TypedArray at a given offset.\n      const bytes = this.handle.readBytes(theView.byteLength - theView.byteOffset);\n      if (bytes.length === 0) {\n        controller.close();\n        controller.byobRequest.respond(0);\n        return;\n      }\n      if (theView instanceof Uint8Array) {\n        theView.set(bytes, theView.byteOffset);\n      } else {\n        const array = new Uint8Array(theView.buffer);\n        for (let i = 0; i < bytes.length; i++) {\n          array[i + (theView.byteOffset ?? 0)] = bytes[i];\n        }\n      }\n      controller.byobRequest.respond(bytes.length);\n    }\n  }\n  exports.FileSystemReadableStreamSource = FileSystemReadableStreamSource;\n  class FileSystemWritableSink {\n    constructor(handle) {\n      this.handle = handle;\n    }\n    abort() {\n      this.close();\n    }\n    close() {\n      this.handle.close();\n    }\n    write(chunk) {\n      this.handle.writeBytes(chunk);\n    }\n  }\n  exports.FileSystemWritableSink = FileSystemWritableSink;\n});","lineCount":61,"map":[[6,2,3,7],[6,8,3,13,"FileSystemReadableStreamSource"],[6,38,3,43],[6,39,3,76],[7,4,5,2,"size"],[7,8,5,6],[7,11,5,17],[7,15,5,21],[8,4,6,2,"type"],[8,8,6,6],[8,11,6,9],[8,18,6,16],[9,4,8,2,"constructor"],[9,15,8,13,"constructor"],[9,16,8,14,"handle"],[9,22,8,32],[9,24,8,34],[10,6,9,4],[10,10,9,8],[10,11,9,9,"handle"],[10,17,9,15],[10,20,9,18,"handle"],[10,26,9,24],[11,4,10,2],[12,4,12,2,"cancel"],[12,10,12,8,"cancel"],[12,11,12,8],[12,13,12,11],[13,6,13,4],[13,10,13,8],[13,11,13,9,"handle"],[13,17,13,15],[13,18,13,16,"close"],[13,23,13,21],[13,24,13,22],[13,25,13,23],[14,4,14,2],[15,4,16,2,"pull"],[15,8,16,6,"pull"],[15,9,16,7,"controller"],[15,19,16,47],[15,21,16,49],[16,6,17,4],[16,12,17,10,"theView"],[16,19,17,17],[16,22,17,20,"controller"],[16,32,17,30],[16,33,17,31,"byobRequest"],[16,44,17,42],[16,46,17,44,"view"],[16,50,17,48],[17,6,18,4],[17,10,18,8],[17,11,18,9,"theView"],[17,18,18,16],[17,20,18,18],[18,8,19,6],[18,14,19,12,"bytes"],[18,19,19,17],[18,22,19,20],[18,26,19,24],[18,27,19,25,"handle"],[18,33,19,31],[18,34,19,32,"readBytes"],[18,43,19,41],[18,44,19,42],[18,48,19,46],[18,49,19,47,"size"],[18,53,19,51],[18,54,19,52],[19,8,20,6],[19,12,20,10,"bytes"],[19,17,20,15],[19,18,20,16,"length"],[19,24,20,22],[19,29,20,27],[19,30,20,28],[19,32,20,30],[20,10,21,8,"controller"],[20,20,21,18],[20,21,21,19,"close"],[20,26,21,24],[20,27,21,25],[20,28,21,26],[21,10,22,8],[22,8,23,6],[23,8,24,6,"controller"],[23,18,24,16],[23,19,24,17,"enqueue"],[23,26,24,24],[23,27,24,25,"bytes"],[23,32,24,30],[23,33,24,31],[24,8,25,6],[25,6,26,4],[27,6,28,4],[28,6,29,4],[28,12,29,10,"bytes"],[28,17,29,15],[28,20,29,18],[28,24,29,22],[28,25,29,23,"handle"],[28,31,29,29],[28,32,29,30,"readBytes"],[28,41,29,39],[28,42,29,40,"theView"],[28,49,29,47],[28,50,29,48,"byteLength"],[28,60,29,58],[28,63,29,61,"theView"],[28,70,29,68],[28,71,29,69,"byteOffset"],[28,81,29,79],[28,82,29,80],[29,6,30,4],[29,10,30,8,"bytes"],[29,15,30,13],[29,16,30,14,"length"],[29,22,30,20],[29,27,30,25],[29,28,30,26],[29,30,30,28],[30,8,31,6,"controller"],[30,18,31,16],[30,19,31,17,"close"],[30,24,31,22],[30,25,31,23],[30,26,31,24],[31,8,32,6,"controller"],[31,18,32,16],[31,19,32,17,"byobRequest"],[31,30,32,28],[31,31,32,29,"respond"],[31,38,32,36],[31,39,32,37],[31,40,32,38],[31,41,32,39],[32,8,33,6],[33,6,34,4],[34,6,35,4],[34,10,35,8,"theView"],[34,17,35,15],[34,29,35,27,"Uint8Array"],[34,39,35,37],[34,41,35,39],[35,8,36,6,"theView"],[35,15,36,13],[35,16,36,14,"set"],[35,19,36,17],[35,20,36,18,"bytes"],[35,25,36,23],[35,27,36,25,"theView"],[35,34,36,32],[35,35,36,33,"byteOffset"],[35,45,36,43],[35,46,36,44],[36,6,37,4],[36,7,37,5],[36,13,37,11],[37,8,38,6],[37,14,38,12,"array"],[37,19,38,17],[37,22,38,20],[37,26,38,24,"Uint8Array"],[37,36,38,34],[37,37,38,35,"theView"],[37,44,38,42],[37,45,38,43,"buffer"],[37,51,38,49],[37,52,38,50],[38,8,39,6],[38,13,39,11],[38,17,39,15,"i"],[38,18,39,16],[38,21,39,19],[38,22,39,20],[38,24,39,22,"i"],[38,25,39,23],[38,28,39,26,"bytes"],[38,33,39,31],[38,34,39,32,"length"],[38,40,39,38],[38,42,39,40,"i"],[38,43,39,41],[38,45,39,43],[38,47,39,45],[39,10,40,8,"array"],[39,15,40,13],[39,16,40,14,"i"],[39,17,40,15],[39,21,40,19,"theView"],[39,28,40,26],[39,29,40,27,"byteOffset"],[39,39,40,37],[39,43,40,41],[39,44,40,42],[39,45,40,43],[39,46,40,44],[39,49,40,47,"bytes"],[39,54,40,52],[39,55,40,53,"i"],[39,56,40,54],[39,57,40,56],[40,8,41,6],[41,6,42,4],[42,6,43,4,"controller"],[42,16,43,14],[42,17,43,15,"byobRequest"],[42,28,43,26],[42,29,43,27,"respond"],[42,36,43,34],[42,37,43,35,"bytes"],[42,42,43,40],[42,43,43,41,"length"],[42,49,43,47],[42,50,43,48],[43,4,44,2],[44,2,45,0],[45,2,45,1,"exports"],[45,9,45,1],[45,10,45,1,"FileSystemReadableStreamSource"],[45,40,45,1],[45,43,45,1,"FileSystemReadableStreamSource"],[45,73,45,1],[46,2,47,7],[46,8,47,13,"FileSystemWritableSink"],[46,30,47,35],[46,31,47,62],[47,4,50,2,"constructor"],[47,15,50,13,"constructor"],[47,16,50,14,"handle"],[47,22,50,32],[47,24,50,34],[48,6,51,4],[48,10,51,8],[48,11,51,9,"handle"],[48,17,51,15],[48,20,51,18,"handle"],[48,26,51,24],[49,4,52,2],[50,4,54,2,"abort"],[50,9,54,7,"abort"],[50,10,54,7],[50,12,54,10],[51,6,55,4],[51,10,55,8],[51,11,55,9,"close"],[51,16,55,14],[51,17,55,15],[51,18,55,16],[52,4,56,2],[53,4,58,2,"close"],[53,9,58,7,"close"],[53,10,58,7],[53,12,58,10],[54,6,59,4],[54,10,59,8],[54,11,59,9,"handle"],[54,17,59,15],[54,18,59,16,"close"],[54,23,59,21],[54,24,59,22],[54,25,59,23],[55,4,60,2],[56,4,62,2,"write"],[56,9,62,7,"write"],[56,10,62,8,"chunk"],[56,15,62,25],[56,17,62,27],[57,6,63,4],[57,10,63,8],[57,11,63,9,"handle"],[57,17,63,15],[57,18,63,16,"writeBytes"],[57,28,63,26],[57,29,63,27,"chunk"],[57,34,63,32],[57,35,63,33],[58,4,64,2],[59,2,65,0],[60,2,65,1,"exports"],[60,9,65,1],[60,10,65,1,"FileSystemWritableSink"],[60,32,65,1],[60,35,65,1,"FileSystemWritableSink"],[60,57,65,1],[61,0,65,1],[61,3]],"functionMap":{"names":["<global>","FileSystemReadableStreamSource","FileSystemReadableStreamSource#constructor","FileSystemReadableStreamSource#cancel","FileSystemReadableStreamSource#pull","FileSystemWritableSink","FileSystemWritableSink#constructor","FileSystemWritableSink#abort","FileSystemWritableSink#close","FileSystemWritableSink#write"],"mappings":"AAA;OCE;ECK;GDE;EEE;GFE;EGE;GH4B;CDC;OKE;ECG;GDE;EEE;GFE;EGE;GHE;EIE;GJE;CLC"}},"type":"js/module"}]}